{"ast":null,"code":"var _jsxFileName = \"/Users/soha/lightbeam/src/ViewContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewContent = ({\n  setOfficeScreenContent\n}) => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const navigate = useNavigate();\n  const fetchTableData = async table => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n  const handleCheckboxChange = entry => {\n    setSelectedEntries(prevEntries => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter(e => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const renderEntry = entry => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(entry).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", key === \"date\" || key === \"birthdate\" ? formatDate(value) : value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map(result => ({\n        ...result.data,\n        table: selectedTable\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent(prevContent => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent, ...entriesData];\n        console.log(\"New OfficeScreenContent:\", newContent);\n        return newContent;\n      });\n      navigate(\"/office-screen\");\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View and Select Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"table-select\",\n      children: \"Select Table:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"table-select\",\n      value: selectedTable,\n      onChange: handleTableChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"users\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"comments\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"events\",\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"canteenMenu\",\n        children: \"Canteen Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meetings\",\n        children: \"Meetings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Content from \", selectedTable]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), tableData.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tableData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `checkbox-${index}`,\n            name: `checkbox-${index}`,\n            checked: selectedEntries.includes(entry),\n            onChange: () => handleCheckboxChange(entry)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `checkbox-${index}`,\n            children: renderEntry(entry)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToScreen,\n      children: \"Add to Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewContent, \"n940j0kXV3xOW0wkOPiidK+Q8h4=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewContent;\nexport default ViewContent;\nvar _c;\n$RefreshReg$(_c, \"ViewContent\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ViewContent","setOfficeScreenContent","_s","selectedTable","setSelectedTable","tableData","setTableData","selectedEntries","setSelectedEntries","navigate","fetchTableData","table","response","get","data","error","console","handleTableChange","e","target","value","handleCheckboxChange","entry","prevEntries","includes","filter","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","renderEntry","children","Object","entries","map","key","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","handleAddToScreen","promises","id","results","Promise","all","entriesData","result","log","prevContent","savedContent","localStorage","getItem","parsedContent","JSON","parse","newContent","htmlFor","onChange","length","index","type","name","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/soha/lightbeam/src/ViewContent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ViewContent = ({ setOfficeScreenContent }) => {\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchTableData = async (table) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n\n  const handleTableChange = (e) => {\n    setSelectedTable(e.target.value);\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n\n  const handleCheckboxChange = (entry) => {\n    setSelectedEntries((prevEntries) => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter((e) => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n\n  const formatDate = (dateString) => {\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const renderEntry = (entry) => {\n    return (\n      <div>\n        {Object.entries(entry).map(([key, value]) => (\n          <p key={key}>\n            <strong>{key.charAt(0).toUpperCase() + key.slice(1)}:</strong>{\" \"}\n            {key === \"date\" || key === \"birthdate\" ? formatDate(value) : value}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map((result) => ({\n        ...result.data,\n        table: selectedTable,\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent((prevContent) => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent, ...entriesData];\n        console.log(\"New OfficeScreenContent:\", newContent);\n        return newContent;\n      });\n\n      navigate(\"/office-screen\");\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>View and Select Content</h1>\n      <label htmlFor=\"table-select\">Select Table:</label>\n      <select\n        id=\"table-select\"\n        value={selectedTable}\n        onChange={handleTableChange}\n      >\n        <option value=\"\">Select...</option>\n        <option value=\"users\">Users</option>\n        <option value=\"comments\">Comments</option>\n        <option value=\"events\">Events</option>\n        <option value=\"canteenMenu\">Canteen Menu</option>\n        <option value=\"meetings\">Meetings</option>\n      </select>\n      <div>\n        <h2>Content from {selectedTable}</h2>\n        {tableData.length > 0 && (\n          <ul>\n            {tableData.map((entry, index) => (\n              <li key={index}>\n                <input\n                  type=\"checkbox\"\n                  id={`checkbox-${index}`}\n                  name={`checkbox-${index}`}\n                  checked={selectedEntries.includes(entry)}\n                  onChange={() => handleCheckboxChange(entry)}\n                />\n                <label htmlFor={`checkbox-${index}`}>\n                  {renderEntry(entry)}\n                </label>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <button onClick={handleAddToScreen}>Add to Screen</button>\n    </div>\n  );\n};\n\nexport default ViewContent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,yBAAyBF,KAAK,EAAE,CAAC;MAClEL,YAAY,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4BJ,KAAK,GAAG,EAAEI,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/Bd,gBAAgB,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE;MAClBV,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC,CAAC,MAAM;MACLd,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMe,oBAAoB,GAAIC,KAAK,IAAK;IACtCd,kBAAkB,CAAEe,WAAW,IAAK;MAClC,IAAIA,WAAW,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC/B,OAAOC,WAAW,CAACE,MAAM,CAAEP,CAAC,IAAKA,CAAC,KAAKI,KAAK,CAAC;MAC/C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,WAAW,EAAED,KAAK,CAAC;MAChC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC;IACrE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;EACpE,CAAC;EAED,MAAMO,WAAW,GAAIb,KAAK,IAAK;IAC7B,oBACEvB,OAAA;MAAAqC,QAAA,EACGC,MAAM,CAACC,OAAO,CAAChB,KAAK,CAAC,CAACiB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEpB,KAAK,CAAC,kBACtCrB,OAAA;QAAAqC,QAAA,gBACErC,OAAA;UAAAqC,QAAA,GAASI,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,EACjEP,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,WAAW,GAAGd,UAAU,CAACN,KAAK,CAAC,GAAGA,KAAK;MAAA,GAF5DoB,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,QAAQ,GAAG1C,eAAe,CAACgC,GAAG,CAAEjB,KAAK,IAAK;MAC9C,OAAO1B,KAAK,CAACiB,GAAG,CAAC,yBAAyBV,aAAa,IAAImB,KAAK,CAAC4B,EAAE,EAAE,CAAC;IACxE,CAAC,CAAC;IAEF,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MAC3C,MAAMK,WAAW,GAAGH,OAAO,CAACZ,GAAG,CAAEgB,MAAM,KAAM;QAC3C,GAAGA,MAAM,CAACzC,IAAI;QACdH,KAAK,EAAER;MACT,CAAC,CAAC,CAAC;;MAEH;MACAa,OAAO,CAACwC,GAAG,CAAC,eAAe,EAAEF,WAAW,CAAC;;MAEzC;MACArD,sBAAsB,CAAEwD,WAAW,IAAK;QACtC,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;QAChE,MAAMC,aAAa,GAAGH,YAAY,GAAGI,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,GAAG,EAAE;QAClE,MAAMM,UAAU,GAAG,CAAC,GAAGH,aAAa,EAAE,GAAGP,WAAW,CAAC;QACrDtC,OAAO,CAACwC,GAAG,CAAC,0BAA0B,EAAEQ,UAAU,CAAC;QACnD,OAAOA,UAAU;MACnB,CAAC,CAAC;MAEFvD,QAAQ,CAAC,gBAAgB,CAAC;IAC5B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAuB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChD,OAAA;MAAOkE,OAAO,EAAC,cAAc;MAAA7B,QAAA,EAAC;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnDhD,OAAA;MACEmD,EAAE,EAAC,cAAc;MACjB9B,KAAK,EAAEjB,aAAc;MACrB+D,QAAQ,EAAEjD,iBAAkB;MAAAmB,QAAA,gBAE5BrC,OAAA;QAAQqB,KAAK,EAAC,EAAE;QAAAgB,QAAA,EAAC;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnChD,OAAA;QAAQqB,KAAK,EAAC,OAAO;QAAAgB,QAAA,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpChD,OAAA;QAAQqB,KAAK,EAAC,UAAU;QAAAgB,QAAA,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1ChD,OAAA;QAAQqB,KAAK,EAAC,QAAQ;QAAAgB,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtChD,OAAA;QAAQqB,KAAK,EAAC,aAAa;QAAAgB,QAAA,EAAC;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDhD,OAAA;QAAQqB,KAAK,EAAC,UAAU;QAAAgB,QAAA,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACThD,OAAA;MAAAqC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,GAAI,eAAa,EAACjC,aAAa;MAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACpC1C,SAAS,CAAC8D,MAAM,GAAG,CAAC,iBACnBpE,OAAA;QAAAqC,QAAA,EACG/B,SAAS,CAACkC,GAAG,CAAC,CAACjB,KAAK,EAAE8C,KAAK,kBAC1BrE,OAAA;UAAAqC,QAAA,gBACErC,OAAA;YACEsE,IAAI,EAAC,UAAU;YACfnB,EAAE,EAAE,YAAYkB,KAAK,EAAG;YACxBE,IAAI,EAAE,YAAYF,KAAK,EAAG;YAC1BG,OAAO,EAAEhE,eAAe,CAACiB,QAAQ,CAACF,KAAK,CAAE;YACzC4C,QAAQ,EAAEA,CAAA,KAAM7C,oBAAoB,CAACC,KAAK;UAAE;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACFhD,OAAA;YAAOkE,OAAO,EAAE,YAAYG,KAAK,EAAG;YAAAhC,QAAA,EACjCD,WAAW,CAACb,KAAK;UAAC;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA,GAVDqB,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNhD,OAAA;MAAQyE,OAAO,EAAExB,iBAAkB;MAAAZ,QAAA,EAAC;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA1HIF,WAAW;EAAA,QAIEH,WAAW;AAAA;AAAA4E,EAAA,GAJxBzE,WAAW;AA4HjB,eAAeA,WAAW;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}