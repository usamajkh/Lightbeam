{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/ViewContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewContent = ({\n  setOfficeScreenContent\n}) => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false); // State to control button visibility\n  const navigate = useNavigate();\n  const fetchTableData = async table => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false); // Hide buttons when table changes\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n  const handleCheckboxChange = entry => {\n    setSelectedEntries(prevEntries => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter(e => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map(result => ({\n        ...result.data,\n        table: selectedTable\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent(prevContent => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent, ...entriesData];\n        console.log(\"New OfficeScreenContent:\", newContent);\n        return newContent;\n      });\n      navigate(\"/office-screen\");\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      await Promise.all(promises);\n      alert(\"Selected entries have been successfully deleted.\");\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after deletion\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n    }\n  };\n  useEffect(() => {\n    // Show buttons only when a table is selected\n    setShowButtons(selectedTable !== \"\");\n  }, [selectedTable]);\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View and Select Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"table-select\",\n      children: \"Select Table:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"table-select\",\n      value: selectedTable,\n      onChange: handleTableChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"users\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"comments\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"events\",\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"canteenMenu\",\n        children: \"Canteen Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meetings\",\n        children: \"Meetings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [\"Content from \", selectedTable]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), tableData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key.charAt(0).toUpperCase() + key.slice(1)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: index % 2 === 0 ? \"rgba(227, 213, 202, 0.2)\" : \"transparent\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `checkbox-${index}`,\n                name: `checkbox-${index}`,\n                checked: selectedEntries.includes(entry),\n                onChange: () => handleCheckboxChange(entry)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry[key] !== undefined ? key === \"date\" || key === \"birthdate\" ? formatDate(entry[key]) : entry[key] : \"N/A\"\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), showButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToScreen,\n        style: buttonStyle,\n        children: \"Add to Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteSelected,\n        style: buttonStyle,\n        children: \"Delete Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewContent, \"5watJ6s5puQO8L2ZiIjMjYC5deQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewContent;\nexport default ViewContent;\nvar _c;\n$RefreshReg$(_c, \"ViewContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewContent","setOfficeScreenContent","_s","selectedTable","setSelectedTable","tableData","setTableData","selectedEntries","setSelectedEntries","showButtons","setShowButtons","navigate","fetchTableData","table","response","get","data","error","console","handleTableChange","e","target","value","handleCheckboxChange","entry","prevEntries","includes","filter","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","handleAddToScreen","promises","map","id","results","Promise","all","entriesData","result","log","prevContent","savedContent","localStorage","getItem","parsedContent","JSON","parse","newContent","handleDeleteSelected","delete","alert","buttonStyle","backgroundColor","color","border","borderRadius","padding","cursor","fontWeight","marginTop","marginRight","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","style","marginBottom","length","width","borderCollapse","textAlign","Object","keys","key","charAt","toUpperCase","slice","index","type","name","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/ViewContent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ViewContent = ({ setOfficeScreenContent }) => {\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false); // State to control button visibility\n  const navigate = useNavigate();\n\n  const fetchTableData = async (table) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n\n  const handleTableChange = (e) => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false); // Hide buttons when table changes\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n\n  const handleCheckboxChange = (entry) => {\n    setSelectedEntries((prevEntries) => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter((e) => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n\n  const formatDate = (dateString) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map((result) => ({\n        ...result.data,\n        table: selectedTable,\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent((prevContent) => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent, ...entriesData];\n        console.log(\"New OfficeScreenContent:\", newContent);\n        return newContent;\n      });\n\n      navigate(\"/office-screen\");\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n    }\n  };\n\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      await Promise.all(promises);\n      alert(\"Selected entries have been successfully deleted.\");\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after deletion\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n    }\n  };\n\n  useEffect(() => {\n    // Show buttons only when a table is selected\n    setShowButtons(selectedTable !== \"\");\n  }, [selectedTable]);\n\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n  };\n\n  return (\n    <div>\n      <h1>View and Select Content</h1>\n      <label htmlFor=\"table-select\">Select Table:</label>\n      <select\n        id=\"table-select\"\n        value={selectedTable}\n        onChange={handleTableChange}\n      >\n        <option value=\"\">Select...</option>\n        <option value=\"users\">Users</option>\n        <option value=\"comments\">Comments</option>\n        <option value=\"events\">Events</option>\n        <option value=\"canteenMenu\">Canteen Menu</option>\n        <option value=\"meetings\">Meetings</option>\n      </select>\n      <div>\n        <h2 style={{ marginBottom: \"20px\" }}>Content from {selectedTable}</h2>\n        {tableData.length > 0 && (\n          <table\n            style={{\n              width: \"100%\",\n              borderCollapse: \"collapse\",\n              textAlign: \"left\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Select</th>\n                {Object.keys(tableData[0]).map((key) => (\n                  <th key={key}>\n                    {key.charAt(0).toUpperCase() + key.slice(1)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((entry, index) => (\n                <tr\n                  key={index}\n                  style={{\n                    backgroundColor:\n                      index % 2 === 0\n                        ? \"rgba(227, 213, 202, 0.2)\"\n                        : \"transparent\",\n                  }}\n                >\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      id={`checkbox-${index}`}\n                      name={`checkbox-${index}`}\n                      checked={selectedEntries.includes(entry)}\n                      onChange={() => handleCheckboxChange(entry)}\n                    />\n                  </td>\n                  {Object.keys(tableData[0]).map((key) => (\n                    <td key={key}>\n                      {entry[key] !== undefined\n                        ? key === \"date\" || key === \"birthdate\"\n                          ? formatDate(entry[key])\n                          : entry[key]\n                        : \"N/A\"}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n      {showButtons && (\n        <>\n          <button onClick={handleAddToScreen} style={buttonStyle}>\n            Add to Screen\n          </button>\n          <button onClick={handleDeleteSelected} style={buttonStyle}>\n            Delete Selected\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ViewContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}