{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/Entur.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Entur = ({\n  fullScreenSection\n}) => {\n  _s();\n  const [departures, setDepartures] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDepartures = async () => {\n      const query = `\n        {\n          stopPlace(id: \"NSR:StopPlace:5738\") {\n            name\n            estimatedCalls(timeRange: 72100, numberOfDepartures: 20, whiteListedModes: [bus]) {\n              realtime\n              aimedArrivalTime\n              expectedArrivalTime\n              destinationDisplay {\n                frontText\n              }\n              serviceJourney {\n                journeyPattern {\n                  line {\n                    publicCode\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n      try {\n        console.log(\"Fetching data...\");\n        const response = await fetch(\"https://api.entur.io/journey-planner/v2/graphql\", {\n          method: \"POST\",\n          headers: {\n            \"ET-Client-Name\": \"your-app-name\",\n            // Replace with your app name\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            query\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(\"Fetch result:\", result);\n        if (result.errors) {\n          throw new Error(`GraphQL error! ${result.errors.map(e => e.message).join(\", \")}`);\n        }\n        if (!result.data || !result.data.stopPlace) {\n          throw new Error(\"No stopPlace data found in the response.\");\n        }\n        const filteredDepartures = result.data.stopPlace.estimatedCalls.filter(call => [\"71\", \"72\", \"77\"].includes(call.serviceJourney.journeyPattern.line.publicCode));\n        setDepartures(filteredDepartures);\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Fetching error: \", err);\n      }\n    };\n    fetchDepartures();\n    const interval = setInterval(fetchDepartures, 60000); // Fetch data every 60 seconds\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n  const formatTimeDifference = time => {\n    const now = new Date();\n    const departureTime = new Date(time);\n    const diffMs = departureTime - now;\n    const diffMins = Math.round(diffMs / 60000);\n    if (diffMins <= 0) {\n      return \"NÃ¥\";\n    }\n    return `${diffMins} min`;\n  };\n  const closestDepartures = departures.slice(0, 4); // Display 4 closest departures\n  const upcomingDepartures = departures.slice(4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-text\",\n      children: closestDepartures.map((departure, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginBottom: \"10px\",\n          // Add space between the items\n          padding: fullScreenSection ? \"30px\" : \"10px\",\n          // Adjust padding\n          backgroundColor: \"#242f45\",\n          color: \"white\",\n          borderRadius: \"5px\",\n          fontWeight: \"bold\",\n          fontSize: fullScreenSection ? \"3em\" : \"1em\" // Adjust font size\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [departure.serviceJourney.journeyPattern.line.publicCode, \" \", departure.destinationDisplay.frontText, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          children: formatTimeDifference(departure.expectedArrivalTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          boxSizing: \"border-box\",\n          marginBottom: fullScreenSection ? \"70px\" : \"10px\" // Adjust this line\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            paddingLeft: \"100%\",\n            animation: \"marquee 60s linear infinite\" // Adjust the duration to slow down the speed\n          },\n          children: upcomingDepartures.map((departure, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: \"20px\",\n              padding: \"5px\",\n              backgroundColor: \"#242f45\",\n              color: \"white\",\n              borderRadius: \"5px\",\n              fontSize: fullScreenSection ? \"2em\" : \"1em\" // Adjust font size\n            },\n            children: [departure.serviceJourney.journeyPattern.line.publicCode, \" \", departure.destinationDisplay.frontText, \":\", \" \", formatTimeDifference(departure.expectedArrivalTime)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes marquee {\n            0% {\n              transform: translate(0, 0);\n            }\n            100% {\n              transform: translate(-100%, 0);\n            }\n          }\n          @media (min-width: 1420px) {\n            .content-text {\n              font-size: 1.5em;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Entur, \"Uul93ExvS3pt/0IpMjjQPoZ1tpU=\");\n_c = Entur;\nexport default Entur;\nvar _c;\n$RefreshReg$(_c, \"Entur\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Entur","fullScreenSection","_s","departures","setDepartures","error","setError","fetchDepartures","query","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","errors","map","e","message","join","data","stopPlace","filteredDepartures","estimatedCalls","filter","call","includes","serviceJourney","journeyPattern","line","publicCode","err","interval","setInterval","clearInterval","formatTimeDifference","time","now","Date","departureTime","diffMs","diffMins","Math","round","closestDepartures","slice","upcomingDepartures","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","departure","index","display","justifyContent","marginBottom","padding","backgroundColor","borderRadius","fontWeight","fontSize","textAlign","destinationDisplay","frontText","expectedArrivalTime","whiteSpace","overflow","boxSizing","paddingLeft","animation","marginRight","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/Entur.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Entur = ({ fullScreenSection }) => {\n  const [departures, setDepartures] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDepartures = async () => {\n      const query = `\n        {\n          stopPlace(id: \"NSR:StopPlace:5738\") {\n            name\n            estimatedCalls(timeRange: 72100, numberOfDepartures: 20, whiteListedModes: [bus]) {\n              realtime\n              aimedArrivalTime\n              expectedArrivalTime\n              destinationDisplay {\n                frontText\n              }\n              serviceJourney {\n                journeyPattern {\n                  line {\n                    publicCode\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n\n      try {\n        console.log(\"Fetching data...\");\n        const response = await fetch(\n          \"https://api.entur.io/journey-planner/v2/graphql\",\n          {\n            method: \"POST\",\n            headers: {\n              \"ET-Client-Name\": \"your-app-name\", // Replace with your app name\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ query }),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const result = await response.json();\n        console.log(\"Fetch result:\", result);\n\n        if (result.errors) {\n          throw new Error(\n            `GraphQL error! ${result.errors.map((e) => e.message).join(\", \")}`\n          );\n        }\n\n        if (!result.data || !result.data.stopPlace) {\n          throw new Error(\"No stopPlace data found in the response.\");\n        }\n\n        const filteredDepartures = result.data.stopPlace.estimatedCalls.filter(\n          (call) =>\n            [\"71\", \"72\", \"77\"].includes(\n              call.serviceJourney.journeyPattern.line.publicCode\n            )\n        );\n\n        setDepartures(filteredDepartures);\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Fetching error: \", err);\n      }\n    };\n\n    fetchDepartures();\n    const interval = setInterval(fetchDepartures, 60000); // Fetch data every 60 seconds\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n\n  const formatTimeDifference = (time) => {\n    const now = new Date();\n    const departureTime = new Date(time);\n    const diffMs = departureTime - now;\n    const diffMins = Math.round(diffMs / 60000);\n\n    if (diffMins <= 0) {\n      return \"NÃ¥\";\n    }\n\n    return `${diffMins} min`;\n  };\n\n  const closestDepartures = departures.slice(0, 4); // Display 4 closest departures\n  const upcomingDepartures = departures.slice(4);\n\n  return (\n    <div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <div className=\"content-text\">\n        {closestDepartures.map((departure, index) => (\n          <div\n            key={index}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"10px\", // Add space between the items\n              padding: fullScreenSection ? \"30px\" : \"10px\", // Adjust padding\n              backgroundColor: \"#242f45\",\n              color: \"white\",\n              borderRadius: \"5px\",\n              fontWeight: \"bold\",\n              fontSize: fullScreenSection ? \"3em\" : \"1em\", // Adjust font size\n            }}\n          >\n            <div style={{ textAlign: \"left\" }}>\n              {departure.serviceJourney.journeyPattern.line.publicCode}{\" \"}\n              {departure.destinationDisplay.frontText}:\n            </div>\n            <div style={{ textAlign: \"right\" }}>\n              {formatTimeDifference(departure.expectedArrivalTime)}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div>\n        <div\n          style={{\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            boxSizing: \"border-box\",\n            marginBottom: fullScreenSection ? \"70px\" : \"10px\", // Adjust this line\n          }}\n        >\n          <div\n            style={{\n              display: \"inline-block\",\n              paddingLeft: \"100%\",\n              animation: \"marquee 60s linear infinite\", // Adjust the duration to slow down the speed\n            }}\n          >\n            {upcomingDepartures.map((departure, index) => (\n              <span\n                key={index}\n                style={{\n                  marginRight: \"20px\",\n                  padding: \"5px\",\n                  backgroundColor: \"#242f45\",\n                  color: \"white\",\n                  borderRadius: \"5px\",\n                  fontSize: fullScreenSection ? \"2em\" : \"1em\", // Adjust font size\n                }}\n              >\n                {departure.serviceJourney.journeyPattern.line.publicCode}{\" \"}\n                {departure.destinationDisplay.frontText}:{\" \"}\n                {formatTimeDifference(departure.expectedArrivalTime)}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n      <style>\n        {`\n          @keyframes marquee {\n            0% {\n              transform: translate(0, 0);\n            }\n            100% {\n              transform: translate(-100%, 0);\n            }\n          }\n          @media (min-width: 1420px) {\n            .content-text {\n              font-size: 1.5em;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default Entur;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}