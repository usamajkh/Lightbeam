{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/Entur.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Entur = () => {\n  _s();\n  const [departures, setDepartures] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDepartures = async () => {\n      const query = `\n        {\n          stopPlace(id: \"NSR:StopPlace:58381\") {\n            name\n            estimatedCalls(timeRange: 72100, numberOfDepartures: 20, whiteListedModes: [metro]) {\n              realtime\n              aimedArrivalTime\n              expectedArrivalTime\n              destinationDisplay {\n                frontText\n              }\n              serviceJourney {\n                journeyPattern {\n                  line {\n                    publicCode\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n      try {\n        console.log(\"Fetching data...\");\n        const response = await fetch(\"https://api.entur.io/journey-planner/v2/graphql\", {\n          method: \"POST\",\n          headers: {\n            \"ET-Client-Name\": \"your-app-name\",\n            // Replace with your app name\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            query\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(\"Fetch result:\", result);\n        console.log(\"stopPlace data:\", result.data.stopPlace);\n        if (result.errors) {\n          throw new Error(`GraphQL error! ${result.errors.map(e => e.message).join(\", \")}`);\n        }\n        setDepartures(result.data.stopPlace.estimatedCalls);\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Fetching error: \", err);\n      }\n    };\n    fetchDepartures();\n    const interval = setInterval(fetchDepartures, 60000); // Fetch data every 60 seconds\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n  const formatTimeDifference = time => {\n    const now = new Date();\n    const departureTime = new Date(time);\n    const diffMs = departureTime - now;\n    const diffMins = Math.round(diffMs / 60000);\n    if (diffMins <= 0) {\n      return \"Nå\";\n    }\n    return `${diffMins} min`;\n  };\n  const closestDepartures = departures.slice(0, 3);\n  const upcomingDepartures = departures.slice(3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          fontWeight: \"bold\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: \"Linje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          children: \"Avgang\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), closestDepartures.map((departure, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [departure.serviceJourney.journeyPattern.line.publicCode, \" \", departure.destinationDisplay.frontText, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          children: formatTimeDifference(departure.expectedArrivalTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"marquee\", {\n        children: upcomingDepartures.map((departure, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"20px\"\n          },\n          children: [departure.serviceJourney.journeyPattern.line.publicCode, \" \", departure.destinationDisplay.frontText, \":\", \" \", formatTimeDifference(departure.expectedArrivalTime)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Entur, \"Uul93ExvS3pt/0IpMjjQPoZ1tpU=\");\n_c = Entur;\nexport default Entur;\nvar _c;\n$RefreshReg$(_c, \"Entur\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Entur","_s","departures","setDepartures","error","setError","fetchDepartures","query","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","data","stopPlace","errors","map","e","message","join","estimatedCalls","err","interval","setInterval","clearInterval","formatTimeDifference","time","now","Date","departureTime","diffMs","diffMins","Math","round","closestDepartures","slice","upcomingDepartures","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","fontWeight","textAlign","departure","index","serviceJourney","journeyPattern","line","publicCode","destinationDisplay","frontText","expectedArrivalTime","marginRight","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/Entur.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Entur = () => {\n  const [departures, setDepartures] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDepartures = async () => {\n      const query = `\n        {\n          stopPlace(id: \"NSR:StopPlace:58381\") {\n            name\n            estimatedCalls(timeRange: 72100, numberOfDepartures: 20, whiteListedModes: [metro]) {\n              realtime\n              aimedArrivalTime\n              expectedArrivalTime\n              destinationDisplay {\n                frontText\n              }\n              serviceJourney {\n                journeyPattern {\n                  line {\n                    publicCode\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n\n      try {\n        console.log(\"Fetching data...\");\n        const response = await fetch(\n          \"https://api.entur.io/journey-planner/v2/graphql\",\n          {\n            method: \"POST\",\n            headers: {\n              \"ET-Client-Name\": \"your-app-name\", // Replace with your app name\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ query }),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const result = await response.json();\n        console.log(\"Fetch result:\", result);\n        console.log(\"stopPlace data:\", result.data.stopPlace);\n\n        if (result.errors) {\n          throw new Error(\n            `GraphQL error! ${result.errors.map((e) => e.message).join(\", \")}`\n          );\n        }\n\n        setDepartures(result.data.stopPlace.estimatedCalls);\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Fetching error: \", err);\n      }\n    };\n\n    fetchDepartures();\n    const interval = setInterval(fetchDepartures, 60000); // Fetch data every 60 seconds\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n\n  const formatTimeDifference = (time) => {\n    const now = new Date();\n    const departureTime = new Date(time);\n    const diffMs = departureTime - now;\n    const diffMins = Math.round(diffMs / 60000);\n\n    if (diffMins <= 0) {\n      return \"Nå\";\n    }\n\n    return `${diffMins} min`;\n  };\n\n  const closestDepartures = departures.slice(0, 3);\n  const upcomingDepartures = departures.slice(3);\n\n  return (\n    <div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <div style={{ textAlign: \"left\" }}>Linje</div>\n          <div style={{ textAlign: \"right\" }}>Avgang</div>\n        </div>\n        {closestDepartures.map((departure, index) => (\n          <div\n            key={index}\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <div style={{ textAlign: \"left\" }}>\n              {departure.serviceJourney.journeyPattern.line.publicCode}{\" \"}\n              {departure.destinationDisplay.frontText}:\n            </div>\n            <div style={{ textAlign: \"right\" }}>\n              {formatTimeDifference(departure.expectedArrivalTime)}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div>\n        <h2></h2>\n        <marquee>\n          {upcomingDepartures.map((departure, index) => (\n            <span key={index} style={{ marginRight: \"20px\" }}>\n              {departure.serviceJourney.journeyPattern.line.publicCode}{\" \"}\n              {departure.destinationDisplay.frontText}:{\" \"}\n              {formatTimeDifference(departure.expectedArrivalTime)}\n            </span>\n          ))}\n        </marquee>\n      </div>\n    </div>\n  );\n};\n\nexport default Entur;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}