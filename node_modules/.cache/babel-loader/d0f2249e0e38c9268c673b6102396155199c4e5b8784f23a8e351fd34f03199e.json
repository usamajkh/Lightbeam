{"ast":null,"code":"var _jsxFileName = \"/Users/soha/lightbeam/src/ViewContent.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewContent = ({\n  data,\n  selectedEntries,\n  setSelectedEntries\n}) => {\n  const handleCheckboxChange = id => {\n    if (selectedEntries.includes(id)) {\n      setSelectedEntries(selectedEntries.filter(entry => entry !== id));\n    } else {\n      setSelectedEntries([...selectedEntries, id]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedEntries.includes(item.id),\n        onChange: () => handleCheckboxChange(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Object.entries(item).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), \" \", key === \"birthdate\" ? formatDate(value) : value, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 67\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewContent;\nconst formatDate = dateString => {\n  const options = {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\"\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nexport default ViewContent;\nvar _c;\n$RefreshReg$(_c, \"ViewContent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ViewContent","data","selectedEntries","setSelectedEntries","handleCheckboxChange","id","includes","filter","entry","children","map","item","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","key","value","formatDate","_c","dateString","options","year","month","day","Date","toLocaleDateString","undefined","$RefreshReg$"],"sources":["/Users/soha/lightbeam/src/ViewContent.js"],"sourcesContent":["import React from \"react\";\n\nconst ViewContent = ({ data, selectedEntries, setSelectedEntries }) => {\n  const handleCheckboxChange = (id) => {\n    if (selectedEntries.includes(id)) {\n      setSelectedEntries(selectedEntries.filter((entry) => entry !== id));\n    } else {\n      setSelectedEntries([...selectedEntries, id]);\n    }\n  };\n\n  return (\n    <div>\n      {data.map((item) => (\n        <div key={item.id}>\n          <input\n            type=\"checkbox\"\n            checked={selectedEntries.includes(item.id)}\n            onChange={() => handleCheckboxChange(item.id)}\n          />\n          <span>\n            {Object.entries(item).map(([key, value]) => (\n              <span key={key}>\n                <strong>{key}:</strong>{\" \"}\n                {key === \"birthdate\" ? formatDate(value) : value} <br />\n              </span>\n            ))}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst formatDate = (dateString) => {\n  const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nexport default ViewContent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,eAAe;EAAEC;AAAmB,CAAC,KAAK;EACrE,MAAMC,oBAAoB,GAAIC,EAAE,IAAK;IACnC,IAAIH,eAAe,CAACI,QAAQ,CAACD,EAAE,CAAC,EAAE;MAChCF,kBAAkB,CAACD,eAAe,CAACK,MAAM,CAAEC,KAAK,IAAKA,KAAK,KAAKH,EAAE,CAAC,CAAC;IACrE,CAAC,MAAM;MACLF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEG,EAAE,CAAC,CAAC;IAC9C;EACF,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,EACGR,IAAI,CAACS,GAAG,CAAEC,IAAI,iBACbZ,OAAA;MAAAU,QAAA,gBACEV,OAAA;QACEa,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEX,eAAe,CAACI,QAAQ,CAACK,IAAI,CAACN,EAAE,CAAE;QAC3CS,QAAQ,EAAEA,CAAA,KAAMV,oBAAoB,CAACO,IAAI,CAACN,EAAE;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFnB,OAAA;QAAAU,QAAA,EACGU,MAAM,CAACC,OAAO,CAACT,IAAI,CAAC,CAACD,GAAG,CAAC,CAAC,CAACW,GAAG,EAAEC,KAAK,CAAC,kBACrCvB,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAAU,QAAA,GAASY,GAAG,EAAC,GAAC;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAAC,GAAG,EAC1BG,GAAG,KAAK,WAAW,GAAGE,UAAU,CAACD,KAAK,CAAC,GAAGA,KAAK,EAAC,GAAC,eAAAvB,OAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAF/CG,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,GAbCP,IAAI,CAACN,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GA9BIxB,WAAW;AAgCjB,MAAMuB,UAAU,GAAIE,UAAU,IAAK;EACjC,MAAMC,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAU,CAAC;EACrE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;AACpE,CAAC;AAED,eAAe1B,WAAW;AAAC,IAAAwB,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}