{"ast":null,"code":"var _jsxFileName = \"/Users/soha/lightbeam/src/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getComments, createComment, updateComment, deleteComment } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [comments, setComments] = useState([]); // Initialize as an empty array\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const data = await getComments();\n      setComments(data);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n      setComments([]); // Ensure comments is set to an empty array on error\n    }\n  };\n  const handleCreateComment = async () => {\n    const comment = {\n      content: newComment,\n      meetingId: 1,\n      // Adjust based on your logic\n      created_by: \"User1\" // Adjust based on your logic\n    };\n    try {\n      await createComment(comment);\n      fetchComments();\n      setNewComment(\"\");\n    } catch (error) {\n      console.error(\"Error creating comment:\", error);\n    }\n  };\n  const handleUpdateComment = async id => {\n    const updatedComment = {\n      content: \"Updated content\"\n    };\n    try {\n      await updateComment(id, updatedComment);\n      fetchComments();\n    } catch (error) {\n      console.error(`Error updating comment ${id}:`, error);\n    }\n  };\n  const handleDeleteComment = async id => {\n    try {\n      await deleteComment(id);\n      fetchComments();\n    } catch (error) {\n      console.error(`Error deleting comment ${id}:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newComment,\n      onChange: e => setNewComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateComment,\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateComment(comment.id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"+OVXuOcjEFRN/kXBrT9MF+duWSc=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","getComments","createComment","updateComment","deleteComment","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","newComment","setNewComment","fetchComments","data","error","console","handleCreateComment","comment","content","meetingId","created_by","handleUpdateComment","id","updatedComment","handleDeleteComment","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/Users/soha/lightbeam/src/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  getComments,\n  createComment,\n  updateComment,\n  deleteComment,\n} from \"./api\";\n\nconst Comments = () => {\n  const [comments, setComments] = useState([]); // Initialize as an empty array\n  const [newComment, setNewComment] = useState(\"\");\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const data = await getComments();\n      setComments(data);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n      setComments([]); // Ensure comments is set to an empty array on error\n    }\n  };\n\n  const handleCreateComment = async () => {\n    const comment = {\n      content: newComment,\n      meetingId: 1, // Adjust based on your logic\n      created_by: \"User1\", // Adjust based on your logic\n    };\n    try {\n      await createComment(comment);\n      fetchComments();\n      setNewComment(\"\");\n    } catch (error) {\n      console.error(\"Error creating comment:\", error);\n    }\n  };\n\n  const handleUpdateComment = async (id) => {\n    const updatedComment = { content: \"Updated content\" };\n    try {\n      await updateComment(id, updatedComment);\n      fetchComments();\n    } catch (error) {\n      console.error(`Error updating comment ${id}:`, error);\n    }\n  };\n\n  const handleDeleteComment = async (id) => {\n    try {\n      await deleteComment(id);\n      fetchComments();\n    } catch (error) {\n      console.error(`Error deleting comment ${id}:`, error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Comments</h1>\n      <input\n        type=\"text\"\n        value={newComment}\n        onChange={(e) => setNewComment(e.target.value)}\n      />\n      <button onClick={handleCreateComment}>Add Comment</button>\n      <ul>\n        {comments.map((comment) => (\n          <li key={comment.id}>\n            {comment.content}\n            <button onClick={() => handleUpdateComment(comment.id)}>\n              Update\n            </button>\n            <button onClick={() => handleDeleteComment(comment.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}