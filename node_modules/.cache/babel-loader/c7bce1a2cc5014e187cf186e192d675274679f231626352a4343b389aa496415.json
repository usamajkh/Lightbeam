{"ast":null,"code":"var _jsxFileName = \"/Users/soha/lightbeam/src/OfficeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfficeScreen = ({\n  officeScreenContent\n}) => {\n  _s();\n  const [content, setContent] = useState(null);\n  useEffect(() => {\n    const savedContent = localStorage.getItem(\"officeScreenContent\");\n    if (savedContent) {\n      setContent(JSON.parse(savedContent));\n    } else {\n      setContent(officeScreenContent);\n    }\n  }, [officeScreenContent]);\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const renderEntry = entry => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(entry).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), \" \", key === \"date\" || key === \"birthdate\" ? formatDate(value) : value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Office Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signage-layout\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signage-events\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: content && content.filter(entry => entry.table === \"events\").map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: renderEntry(event)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(OfficeScreen, \"KAjm4yvD8rjPsAfNiedPNdoqWs4=\");\n_c = OfficeScreen;\nexport default OfficeScreen;\nvar _c;\n$RefreshReg$(_c, \"OfficeScreen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OfficeScreen","officeScreenContent","_s","content","setContent","savedContent","localStorage","getItem","JSON","parse","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","renderEntry","entry","children","Object","entries","map","key","value","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","table","event","index","_c","$RefreshReg$"],"sources":["/Users/soha/lightbeam/src/OfficeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst OfficeScreen = ({ officeScreenContent }) => {\n  const [content, setContent] = useState(null);\n\n  useEffect(() => {\n    const savedContent = localStorage.getItem(\"officeScreenContent\");\n\n    if (savedContent) {\n      setContent(JSON.parse(savedContent));\n    } else {\n      setContent(officeScreenContent);\n    }\n  }, [officeScreenContent]);\n\n  const formatDate = (dateString) => {\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const renderEntry = (entry) => {\n    return (\n      <div>\n        {Object.entries(entry).map(([key, value]) => (\n          <p key={key}>\n            <strong>{key.charAt(0).toUpperCase() + key.slice(1)}:</strong>{\" \"}\n            {key === \"date\" || key === \"birthdate\" ? formatDate(value) : value}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Office Screen</h1>\n      <div className=\"signage-layout\">\n        <div className=\"signage-events\">\n          <h3>Events</h3>\n          <ul>\n            {content &&\n              content\n                .filter((entry) => entry.table === \"events\")\n                .map((event, index) => (\n                  <li key={index}>{renderEntry(event)}</li>\n                ))}\n          </ul>\n        </div>\n        {/* Similar code for other sections */}\n      </div>\n    </div>\n  );\n};\n\nexport default OfficeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}