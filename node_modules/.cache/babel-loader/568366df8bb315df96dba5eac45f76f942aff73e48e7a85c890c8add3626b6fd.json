{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/ViewContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewContent = ({\n  setOfficeScreenContent\n}) => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false); // State to control button visibility\n  const [addButtonStyle, setAddButtonStyle] = useState({});\n  const [deleteButtonStyle, setDeleteButtonStyle] = useState({});\n  const navigate = useNavigate();\n  const selectRef = useRef(null); // Ref for select element\n\n  const fetchTableData = async table => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false); // Hide buttons when table changes\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n  const handleCheckboxChange = entry => {\n    setSelectedEntries(prevEntries => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter(e => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map(result => ({\n        ...result.data,\n        table: selectedTable\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent(prevContent => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent, ...entriesData];\n        console.log(\"New OfficeScreenContent:\", newContent);\n        return newContent;\n      });\n      navigate(\"/office-screen\");\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      await Promise.all(promises);\n      alert(\"Selected entries have been successfully deleted.\");\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after deletion\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n    }\n  };\n  useEffect(() => {\n    // Show buttons only when a table is selected\n    setShowButtons(selectedTable !== \"\");\n\n    // Adjust the width of the select element based on the longest option text\n    const longestOptionTextWidth = Math.max(...Array.from(selectRef.current.options).map(option => option.text.length * 8 // Adjust the multiplier as needed\n    ));\n    selectRef.current.style.width = `${longestOptionTextWidth + 40}px`; // Add some padding\n  }, [selectedTable]);\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n    transition: \"background-color 0.3s, color 0.3s\"\n  };\n  const handleMouseEnter = setButtonStyle => {\n    setButtonStyle({\n      backgroundColor: \"rgba(227, 213, 202, 0.4)\",\n      color: \"black\"\n    });\n  };\n  const handleMouseLeave = setButtonStyle => {\n    setButtonStyle({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View and Select Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"table-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"table-select\",\n      ref: selectRef // Assign ref to select element\n      ,\n      value: selectedTable,\n      onChange: handleTableChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"users\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"comments\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"events\",\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"canteenMenu\",\n        children: \"Canteen Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"meetings\",\n        children: \"Meetings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [\"Content from \", selectedTable]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), tableData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key.charAt(0).toUpperCase() + key.slice(1)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: index % 2 === 0 ? \"rgba(227, 213, 202, 0.2)\" : \"transparent\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `checkbox-${index}`,\n                name: `checkbox-${index}`,\n                checked: selectedEntries.includes(entry),\n                onChange: () => handleCheckboxChange(entry)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry[key] !== undefined ? key === \"date\" || key === \"birthdate\" ? formatDate(entry[key]) : entry[key] : \"N/A\"\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), showButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToScreen,\n        style: {\n          ...buttonStyle,\n          ...addButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setAddButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setAddButtonStyle),\n        children: \"Add to Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteSelected,\n        style: {\n          ...buttonStyle,\n          ...deleteButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setDeleteButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setDeleteButtonStyle),\n        children: \"Delete Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewContent, \"p9jb01a3jFMTG0bNg1YLkOl1Vsg=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewContent;\nexport default ViewContent;\nvar _c;\n$RefreshReg$(_c, \"ViewContent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewContent","setOfficeScreenContent","_s","selectedTable","setSelectedTable","tableData","setTableData","selectedEntries","setSelectedEntries","showButtons","setShowButtons","addButtonStyle","setAddButtonStyle","deleteButtonStyle","setDeleteButtonStyle","navigate","selectRef","fetchTableData","table","response","get","data","error","console","handleTableChange","e","target","value","handleCheckboxChange","entry","prevEntries","includes","filter","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","handleAddToScreen","promises","map","id","results","Promise","all","entriesData","result","log","prevContent","savedContent","localStorage","getItem","parsedContent","JSON","parse","newContent","handleDeleteSelected","delete","alert","longestOptionTextWidth","Math","max","Array","from","current","option","text","length","style","width","buttonStyle","backgroundColor","color","border","borderRadius","padding","cursor","fontWeight","marginTop","marginRight","transition","handleMouseEnter","setButtonStyle","handleMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","ref","onChange","marginBottom","borderCollapse","textAlign","Object","keys","key","charAt","toUpperCase","slice","index","type","name","checked","onClick","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/ViewContent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ViewContent = ({ setOfficeScreenContent }) => {\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false); // State to control button visibility\n  const [addButtonStyle, setAddButtonStyle] = useState({});\n  const [deleteButtonStyle, setDeleteButtonStyle] = useState({});\n  const navigate = useNavigate();\n  const selectRef = useRef(null); // Ref for select element\n\n  const fetchTableData = async (table) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n\n  const handleTableChange = (e) => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false); // Hide buttons when table changes\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n\n  const handleCheckboxChange = (entry) => {\n    setSelectedEntries((prevEntries) => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter((e) => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n\n  const formatDate = (dateString) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map((result) => ({\n        ...result.data,\n        table: selectedTable,\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent((prevContent) => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent, ...entriesData];\n        console.log(\"New OfficeScreenContent:\", newContent);\n        return newContent;\n      });\n\n      navigate(\"/office-screen\");\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n    }\n  };\n\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      await Promise.all(promises);\n      alert(\"Selected entries have been successfully deleted.\");\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after deletion\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n    }\n  };\n\n  useEffect(() => {\n    // Show buttons only when a table is selected\n    setShowButtons(selectedTable !== \"\");\n\n    // Adjust the width of the select element based on the longest option text\n    const longestOptionTextWidth = Math.max(\n      ...Array.from(selectRef.current.options).map(\n        (option) => option.text.length * 8 // Adjust the multiplier as needed\n      )\n    );\n    selectRef.current.style.width = `${longestOptionTextWidth + 40}px`; // Add some padding\n  }, [selectedTable]);\n\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n    transition: \"background-color 0.3s, color 0.3s\",\n  };\n\n  const handleMouseEnter = (setButtonStyle) => {\n    setButtonStyle({\n      backgroundColor: \"rgba(227, 213, 202, 0.4)\",\n      color: \"black\",\n    });\n  };\n\n  const handleMouseLeave = (setButtonStyle) => {\n    setButtonStyle({});\n  };\n\n  return (\n    <div>\n      <h1>View and Select Content</h1>\n      <label htmlFor=\"table-select\"></label>\n      <select\n        id=\"table-select\"\n        ref={selectRef} // Assign ref to select element\n        value={selectedTable}\n        onChange={handleTableChange}\n      >\n        <option value=\"\">Select...</option>\n        <option value=\"users\">Users</option>\n        <option value=\"comments\">Comments</option>\n        <option value=\"events\">Events</option>\n        <option value=\"canteenMenu\">Canteen Menu</option>\n        <option value=\"meetings\">Meetings</option>\n      </select>\n      <div>\n        <h2 style={{ marginBottom: \"20px\" }}>Content from {selectedTable}</h2>\n        {tableData.length > 0 && (\n          <table\n            style={{\n              width: \"100%\",\n              borderCollapse: \"collapse\",\n              textAlign: \"left\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Select</th>\n                {Object.keys(tableData[0]).map((key) => (\n                  <th key={key}>\n                    {key.charAt(0).toUpperCase() + key.slice(1)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((entry, index) => (\n                <tr\n                  key={index}\n                  style={{\n                    backgroundColor:\n                      index % 2 === 0\n                        ? \"rgba(227, 213, 202, 0.2)\"\n                        : \"transparent\",\n                  }}\n                >\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      id={`checkbox-${index}`}\n                      name={`checkbox-${index}`}\n                      checked={selectedEntries.includes(entry)}\n                      onChange={() => handleCheckboxChange(entry)}\n                    />\n                  </td>\n                  {Object.keys(tableData[0]).map((key) => (\n                    <td key={key}>\n                      {entry[key] !== undefined\n                        ? key === \"date\" || key === \"birthdate\"\n                          ? formatDate(entry[key])\n                          : entry[key]\n                        : \"N/A\"}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n      {showButtons && (\n        <>\n          <button\n            onClick={handleAddToScreen}\n            style={{ ...buttonStyle, ...addButtonStyle }}\n            onMouseEnter={() => handleMouseEnter(setAddButtonStyle)}\n            onMouseLeave={() => handleMouseLeave(setAddButtonStyle)}\n          >\n            Add to Screen\n          </button>\n          <button\n            onClick={handleDeleteSelected}\n            style={{ ...buttonStyle, ...deleteButtonStyle }}\n            onMouseEnter={() => handleMouseEnter(setDeleteButtonStyle)}\n            onMouseLeave={() => handleMouseLeave(setDeleteButtonStyle)}\n          >\n            Delete Selected\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ViewContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}