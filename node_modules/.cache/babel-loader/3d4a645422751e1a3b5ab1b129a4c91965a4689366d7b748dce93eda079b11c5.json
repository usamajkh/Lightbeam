{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/ViewContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewContent = ({\n  setOfficeScreenContent\n}) => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false); // State to control button visibility\n  const [addButtonStyle, setAddButtonStyle] = useState({});\n  const [deleteButtonStyle, setDeleteButtonStyle] = useState({});\n  const [editButtonStyle, setEditButtonStyle] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [editValues, setEditValues] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\"); // State for success message\n  const navigate = useNavigate();\n  const selectRef = useRef(null); // Ref for select element\n\n  const tableNames = {\n    users: \"Brukere\",\n    comments: \"Beskjeder\",\n    events: \"Arrangementer\",\n    canteenMenu: \"Kantinemeny\"\n  };\n  const fetchTableData = async table => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false); // Hide buttons when table changes\n    setSuccessMessage(\"\"); // Clear success message when table changes\n    setEditing(false); // Exit editing mode when table changes\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n  const handleCheckboxChange = entry => {\n    setSelectedEntries(prevEntries => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter(e => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map(result => ({\n        ...result.data,\n        table: selectedTable\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n      let addedEntries = [];\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent(prevContent => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent];\n        entriesData.forEach(entry => {\n          if (!parsedContent.some(existingEntry => existingEntry.id === entry.id && existingEntry.table === entry.table)) {\n            newContent.push(entry);\n            addedEntries.push(entry);\n          }\n        });\n        console.log(\"New OfficeScreenContent:\", newContent);\n        localStorage.setItem(\"officeScreenContent\", JSON.stringify(newContent));\n        return newContent;\n      });\n      if (addedEntries.length > 0) {\n        setSuccessMessage(\"Lagt til på skjerm\");\n      } else {\n        setSuccessMessage(\"Finnes allerede på skjermnen.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n      setSuccessMessage(\"Failed to add to the screen.\");\n    }\n  };\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Slettet fra database\");\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after deletion\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n      setSuccessMessage(\"Failed to delete selected entries.\");\n    }\n  };\n  const handleEdit = () => {\n    setEditing(true);\n    const initialEditValues = selectedEntries.reduce((acc, entry) => {\n      acc[entry.id] = {\n        ...entry\n      };\n      return acc;\n    }, {});\n    setEditValues(initialEditValues);\n  };\n  const handleSave = async () => {\n    const promises = Object.values(editValues).map(entry => {\n      return axios.put(`http://localhost:3000/${selectedTable}/${entry.id}`, entry);\n    });\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Oppdatering vellykket\");\n      setEditing(false);\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after editing\n      setEditValues({});\n    } catch (error) {\n      console.error(\"Error updating selected entries:\", error);\n      setSuccessMessage(\"Failed to update selected entries.\");\n    }\n  };\n  useEffect(() => {\n    // Show buttons only when a table is selected\n    setShowButtons(selectedTable !== \"\");\n\n    // Adjust the width of the select element based on the longest option text\n    const longestOptionTextWidth = Math.max(...Array.from(selectRef.current.options).map(option => option.text.length * 8 // Adjust the multiplier as needed\n    ));\n    selectRef.current.style.width = `${longestOptionTextWidth + 40}px`; // Add some padding\n  }, [selectedTable]);\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n    transition: \"background-color 0.3s, color 0.3s\"\n  };\n  const handleMouseEnter = setButtonStyle => {\n    setButtonStyle({\n      backgroundColor: \"rgba(227, 213, 202, 0.6)\",\n      color: \"white\"\n    });\n  };\n  const handleMouseLeave = setButtonStyle => {\n    setButtonStyle({});\n  };\n  const handleEditChange = (id, key, value) => {\n    setEditValues(prevValues => ({\n      ...prevValues,\n      [id]: {\n        ...prevValues[id],\n        [key]: value\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Legg til innhold som skal vises p\\xE5 skjermen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"table-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"table-select\",\n      ref: selectRef // Assign ref to select element\n      ,\n      value: selectedTable,\n      onChange: handleTableChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"users\",\n        children: \"Brukere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"comments\",\n        children: \"Beskjeder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"events\",\n        children: \"Arrangementer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"canteenMenu\",\n        children: \"Kantinemeny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [\"Innhold fra \", tableNames[selectedTable] || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), tableData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), Object.keys(tableData[0]).map(key => key !== \"picture\" && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key.charAt(0).toUpperCase() + key.slice(1)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: index % 2 === 0 ? \"rgba(227, 213, 202, 0.2)\" : \"transparent\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `checkbox-${index}`,\n                name: `checkbox-${index}`,\n                checked: selectedEntries.includes(entry),\n                onChange: () => handleCheckboxChange(entry)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), Object.keys(tableData[0]).map(key => {\n              var _editValues$entry$id$, _editValues$entry$id;\n              return key !== \"picture\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editing && selectedEntries.includes(entry) ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: (_editValues$entry$id$ = (_editValues$entry$id = editValues[entry.id]) === null || _editValues$entry$id === void 0 ? void 0 : _editValues$entry$id[key]) !== null && _editValues$entry$id$ !== void 0 ? _editValues$entry$id$ : entry[key],\n                  onChange: e => handleEditChange(entry.id, key, e.target.value),\n                  disabled: key === \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 29\n                }, this) : key === \"date\" || key === \"birthdate\" ? formatDate(entry[key]) : entry[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 25\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), showButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToScreen,\n        style: {\n          ...buttonStyle,\n          ...addButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setAddButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setAddButtonStyle),\n        children: \"Legg til\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteSelected,\n        style: {\n          ...buttonStyle,\n          ...deleteButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setDeleteButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setDeleteButtonStyle),\n        children: \"Slett\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), !editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        style: {\n          ...buttonStyle,\n          ...editButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setEditButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setEditButtonStyle),\n        children: \"Rediger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        style: {\n          ...buttonStyle,\n          ...editButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setEditButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setEditButtonStyle),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n        color: \"black\",\n        border: \"1px solid #c3e6cb\",\n        borderRadius: \"4px\",\n        padding: \"10px\",\n        marginTop: \"20px\",\n        fontSize: \"16px\",\n        fontWeight: \"bold\",\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"10px\",\n          fontSize: \"20px\"\n        },\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), successMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewContent, \"0rh3t+zmPieEHva/xDtBznzU42s=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewContent;\nexport default ViewContent;\nvar _c;\n$RefreshReg$(_c, \"ViewContent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewContent","setOfficeScreenContent","_s","selectedTable","setSelectedTable","tableData","setTableData","selectedEntries","setSelectedEntries","showButtons","setShowButtons","addButtonStyle","setAddButtonStyle","deleteButtonStyle","setDeleteButtonStyle","editButtonStyle","setEditButtonStyle","editing","setEditing","editValues","setEditValues","successMessage","setSuccessMessage","navigate","selectRef","tableNames","users","comments","events","canteenMenu","fetchTableData","table","response","get","data","error","console","handleTableChange","e","target","value","handleCheckboxChange","entry","prevEntries","includes","filter","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","handleAddToScreen","promises","map","id","results","Promise","all","entriesData","result","log","addedEntries","prevContent","savedContent","localStorage","getItem","parsedContent","JSON","parse","newContent","forEach","some","existingEntry","push","setItem","stringify","length","handleDeleteSelected","delete","handleEdit","initialEditValues","reduce","acc","handleSave","Object","values","put","longestOptionTextWidth","Math","max","Array","from","current","option","text","style","width","buttonStyle","backgroundColor","color","border","borderRadius","padding","cursor","fontWeight","marginTop","marginRight","transition","handleMouseEnter","setButtonStyle","handleMouseLeave","handleEditChange","key","prevValues","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","ref","onChange","marginBottom","borderCollapse","textAlign","keys","charAt","toUpperCase","slice","index","type","name","checked","_editValues$entry$id$","_editValues$entry$id","disabled","onClick","onMouseEnter","onMouseLeave","fontSize","display","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/ViewContent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.css\";\n\nconst ViewContent = ({ setOfficeScreenContent }) => {\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false); // State to control button visibility\n  const [addButtonStyle, setAddButtonStyle] = useState({});\n  const [deleteButtonStyle, setDeleteButtonStyle] = useState({});\n  const [editButtonStyle, setEditButtonStyle] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [editValues, setEditValues] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\"); // State for success message\n  const navigate = useNavigate();\n  const selectRef = useRef(null); // Ref for select element\n\n  const tableNames = {\n    users: \"Brukere\",\n    comments: \"Beskjeder\",\n    events: \"Arrangementer\",\n    canteenMenu: \"Kantinemeny\",\n  };\n\n  const fetchTableData = async (table) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n\n  const handleTableChange = (e) => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false); // Hide buttons when table changes\n    setSuccessMessage(\"\"); // Clear success message when table changes\n    setEditing(false); // Exit editing mode when table changes\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n\n  const handleCheckboxChange = (entry) => {\n    setSelectedEntries((prevEntries) => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter((e) => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n\n  const formatDate = (dateString) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleAddToScreen = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map((result) => ({\n        ...result.data,\n        table: selectedTable,\n      }));\n\n      // Log the entries being added\n      console.log(\"Entries Data:\", entriesData);\n\n      let addedEntries = [];\n\n      // Merge new data with existing data from localStorage\n      setOfficeScreenContent((prevContent) => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent];\n\n        entriesData.forEach((entry) => {\n          if (\n            !parsedContent.some(\n              (existingEntry) =>\n                existingEntry.id === entry.id &&\n                existingEntry.table === entry.table\n            )\n          ) {\n            newContent.push(entry);\n            addedEntries.push(entry);\n          }\n        });\n\n        console.log(\"New OfficeScreenContent:\", newContent);\n        localStorage.setItem(\"officeScreenContent\", JSON.stringify(newContent));\n        return newContent;\n      });\n\n      if (addedEntries.length > 0) {\n        setSuccessMessage(\"Lagt til på skjerm\");\n      } else {\n        setSuccessMessage(\"Finnes allerede på skjermnen.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n      setSuccessMessage(\"Failed to add to the screen.\");\n    }\n  };\n\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Slettet fra database\");\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after deletion\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n      setSuccessMessage(\"Failed to delete selected entries.\");\n    }\n  };\n\n  const handleEdit = () => {\n    setEditing(true);\n    const initialEditValues = selectedEntries.reduce((acc, entry) => {\n      acc[entry.id] = { ...entry };\n      return acc;\n    }, {});\n    setEditValues(initialEditValues);\n  };\n\n  const handleSave = async () => {\n    const promises = Object.values(editValues).map((entry) => {\n      return axios.put(\n        `http://localhost:3000/${selectedTable}/${entry.id}`,\n        entry\n      );\n    });\n\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Oppdatering vellykket\");\n      setEditing(false);\n      fetchTableData(selectedTable); // Refetch data to update UI\n      setSelectedEntries([]); // Clear selection after editing\n      setEditValues({});\n    } catch (error) {\n      console.error(\"Error updating selected entries:\", error);\n      setSuccessMessage(\"Failed to update selected entries.\");\n    }\n  };\n\n  useEffect(() => {\n    // Show buttons only when a table is selected\n    setShowButtons(selectedTable !== \"\");\n\n    // Adjust the width of the select element based on the longest option text\n    const longestOptionTextWidth = Math.max(\n      ...Array.from(selectRef.current.options).map(\n        (option) => option.text.length * 8 // Adjust the multiplier as needed\n      )\n    );\n    selectRef.current.style.width = `${longestOptionTextWidth + 40}px`; // Add some padding\n  }, [selectedTable]);\n\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n    transition: \"background-color 0.3s, color 0.3s\",\n  };\n\n  const handleMouseEnter = (setButtonStyle) => {\n    setButtonStyle({\n      backgroundColor: \"rgba(227, 213, 202, 0.6)\",\n      color: \"white\",\n    });\n  };\n\n  const handleMouseLeave = (setButtonStyle) => {\n    setButtonStyle({});\n  };\n\n  const handleEditChange = (id, key, value) => {\n    setEditValues((prevValues) => ({\n      ...prevValues,\n      [id]: {\n        ...prevValues[id],\n        [key]: value,\n      },\n    }));\n  };\n\n  return (\n    <div>\n      <h1>Legg til innhold som skal vises på skjermen</h1>\n      <label htmlFor=\"table-select\"></label>\n      <select\n        id=\"table-select\"\n        ref={selectRef} // Assign ref to select element\n        value={selectedTable}\n        onChange={handleTableChange}\n      >\n        <option value=\"\">Select...</option>\n        <option value=\"users\">Brukere</option>\n        <option value=\"comments\">Beskjeder</option>\n        <option value=\"events\">Arrangementer</option>\n        <option value=\"canteenMenu\">Kantinemeny</option>\n      </select>\n      <div>\n        <h2 style={{ marginBottom: \"20px\" }}>\n          Innhold fra {tableNames[selectedTable] || \"\"}\n        </h2>\n        {tableData.length > 0 && (\n          <table\n            style={{\n              width: \"100%\",\n              borderCollapse: \"collapse\",\n              textAlign: \"left\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Select</th>\n                {Object.keys(tableData[0]).map(\n                  (key) =>\n                    key !== \"picture\" && (\n                      <th key={key}>\n                        {key.charAt(0).toUpperCase() + key.slice(1)}\n                      </th>\n                    )\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((entry, index) => (\n                <tr\n                  key={index}\n                  style={{\n                    backgroundColor:\n                      index % 2 === 0\n                        ? \"rgba(227, 213, 202, 0.2)\"\n                        : \"transparent\",\n                  }}\n                >\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      id={`checkbox-${index}`}\n                      name={`checkbox-${index}`}\n                      checked={selectedEntries.includes(entry)}\n                      onChange={() => handleCheckboxChange(entry)}\n                    />\n                  </td>\n                  {Object.keys(tableData[0]).map(\n                    (key) =>\n                      key !== \"picture\" && (\n                        <td key={key}>\n                          {editing && selectedEntries.includes(entry) ? (\n                            <input\n                              type=\"text\"\n                              value={editValues[entry.id]?.[key] ?? entry[key]}\n                              onChange={(e) =>\n                                handleEditChange(entry.id, key, e.target.value)\n                              }\n                              disabled={key === \"id\"}\n                            />\n                          ) : key === \"date\" || key === \"birthdate\" ? (\n                            formatDate(entry[key])\n                          ) : (\n                            entry[key]\n                          )}\n                        </td>\n                      )\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n      {showButtons && (\n        <>\n          <button\n            onClick={handleAddToScreen}\n            style={{ ...buttonStyle, ...addButtonStyle }}\n            onMouseEnter={() => handleMouseEnter(setAddButtonStyle)}\n            onMouseLeave={() => handleMouseLeave(setAddButtonStyle)}\n          >\n            Legg til\n          </button>\n          <button\n            onClick={handleDeleteSelected}\n            style={{ ...buttonStyle, ...deleteButtonStyle }}\n            onMouseEnter={() => handleMouseEnter(setDeleteButtonStyle)}\n            onMouseLeave={() => handleMouseLeave(setDeleteButtonStyle)}\n          >\n            Slett\n          </button>\n          {!editing ? (\n            <button\n              onClick={handleEdit}\n              style={{ ...buttonStyle, ...editButtonStyle }}\n              onMouseEnter={() => handleMouseEnter(setEditButtonStyle)}\n              onMouseLeave={() => handleMouseLeave(setEditButtonStyle)}\n            >\n              Rediger\n            </button>\n          ) : (\n            <button\n              onClick={handleSave}\n              style={{ ...buttonStyle, ...editButtonStyle }}\n              onMouseEnter={() => handleMouseEnter(setEditButtonStyle)}\n              onMouseLeave={() => handleMouseLeave(setEditButtonStyle)}\n            >\n              Save\n            </button>\n          )}\n        </>\n      )}\n      {successMessage && (\n        <div\n          style={{\n            backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n            color: \"black\",\n            border: \"1px solid #c3e6cb\",\n            borderRadius: \"4px\",\n            padding: \"10px\",\n            marginTop: \"20px\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <span style={{ marginRight: \"10px\", fontSize: \"20px\" }}>\n            &#10003;\n          </span>\n          {successMessage}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ViewContent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAMgC,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,MAAM6B,SAAS,GAAG/B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhC,MAAMgC,UAAU,GAAG;IACjBC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,WAAW;IACrBC,MAAM,EAAE,eAAe;IACvBC,WAAW,EAAE;EACf,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,yBAAyBF,KAAK,EAAE,CAAC;MAClEzB,YAAY,CAAC0B,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4BJ,KAAK,GAAG,EAAEI,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/BlC,gBAAgB,CAACkC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC9B,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACvBY,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACvBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACnB,IAAIoB,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE;MAClBV,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC,CAAC,MAAM;MACLlC,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMmC,oBAAoB,GAAIC,KAAK,IAAK;IACtClC,kBAAkB,CAAEmC,WAAW,IAAK;MAClC,IAAIA,WAAW,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC/B,OAAOC,WAAW,CAACE,MAAM,CAAEP,CAAC,IAAKA,CAAC,KAAKI,KAAK,CAAC;MAC/C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,WAAW,EAAED,KAAK,CAAC;MAChC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE;IACP,CAAC;IACD,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;EACpE,CAAC;EAED,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,QAAQ,GAAGjD,eAAe,CAACkD,GAAG,CAAEf,KAAK,IAAK;MAC9C,OAAOhD,KAAK,CAACuC,GAAG,CAAC,yBAAyB9B,aAAa,IAAIuC,KAAK,CAACgB,EAAE,EAAE,CAAC;IACxE,CAAC,CAAC;IAEF,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAC3C,MAAMM,WAAW,GAAGH,OAAO,CAACF,GAAG,CAAEM,MAAM,KAAM;QAC3C,GAAGA,MAAM,CAAC7B,IAAI;QACdH,KAAK,EAAE5B;MACT,CAAC,CAAC,CAAC;;MAEH;MACAiC,OAAO,CAAC4B,GAAG,CAAC,eAAe,EAAEF,WAAW,CAAC;MAEzC,IAAIG,YAAY,GAAG,EAAE;;MAErB;MACAhE,sBAAsB,CAAEiE,WAAW,IAAK;QACtC,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;QAChE,MAAMC,aAAa,GAAGH,YAAY,GAAGI,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,GAAG,EAAE;QAClE,MAAMM,UAAU,GAAG,CAAC,GAAGH,aAAa,CAAC;QAErCR,WAAW,CAACY,OAAO,CAAEhC,KAAK,IAAK;UAC7B,IACE,CAAC4B,aAAa,CAACK,IAAI,CAChBC,aAAa,IACZA,aAAa,CAAClB,EAAE,KAAKhB,KAAK,CAACgB,EAAE,IAC7BkB,aAAa,CAAC7C,KAAK,KAAKW,KAAK,CAACX,KAClC,CAAC,EACD;YACA0C,UAAU,CAACI,IAAI,CAACnC,KAAK,CAAC;YACtBuB,YAAY,CAACY,IAAI,CAACnC,KAAK,CAAC;UAC1B;QACF,CAAC,CAAC;QAEFN,OAAO,CAAC4B,GAAG,CAAC,0BAA0B,EAAES,UAAU,CAAC;QACnDL,YAAY,CAACU,OAAO,CAAC,qBAAqB,EAAEP,IAAI,CAACQ,SAAS,CAACN,UAAU,CAAC,CAAC;QACvE,OAAOA,UAAU;MACnB,CAAC,CAAC;MAEF,IAAIR,YAAY,CAACe,MAAM,GAAG,CAAC,EAAE;QAC3B1D,iBAAiB,CAAC,oBAAoB,CAAC;MACzC,CAAC,MAAM;QACLA,iBAAiB,CAAC,+BAA+B,CAAC;MACpD;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjEb,iBAAiB,CAAC,8BAA8B,CAAC;IACnD;EACF,CAAC;EAED,MAAM2D,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMzB,QAAQ,GAAGjD,eAAe,CAACkD,GAAG,CAAEf,KAAK,IAAK;MAC9C,OAAOhD,KAAK,CAACwF,MAAM,CAAC,yBAAyB/E,aAAa,IAAIuC,KAAK,CAACgB,EAAE,EAAE,CAAC;IAC3E,CAAC,CAAC;IAEF,IAAI;MACF,MAAME,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAC3BlC,iBAAiB,CAAC,sBAAsB,CAAC;MACzCQ,cAAc,CAAC3B,aAAa,CAAC,CAAC,CAAC;MAC/BK,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDb,iBAAiB,CAAC,oCAAoC,CAAC;IACzD;EACF,CAAC;EAED,MAAM6D,UAAU,GAAGA,CAAA,KAAM;IACvBjE,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMkE,iBAAiB,GAAG7E,eAAe,CAAC8E,MAAM,CAAC,CAACC,GAAG,EAAE5C,KAAK,KAAK;MAC/D4C,GAAG,CAAC5C,KAAK,CAACgB,EAAE,CAAC,GAAG;QAAE,GAAGhB;MAAM,CAAC;MAC5B,OAAO4C,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACNlE,aAAa,CAACgE,iBAAiB,CAAC;EAClC,CAAC;EAED,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM/B,QAAQ,GAAGgC,MAAM,CAACC,MAAM,CAACtE,UAAU,CAAC,CAACsC,GAAG,CAAEf,KAAK,IAAK;MACxD,OAAOhD,KAAK,CAACgG,GAAG,CACd,yBAAyBvF,aAAa,IAAIuC,KAAK,CAACgB,EAAE,EAAE,EACpDhB,KACF,CAAC;IACH,CAAC,CAAC;IAEF,IAAI;MACF,MAAMkB,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAC3BlC,iBAAiB,CAAC,uBAAuB,CAAC;MAC1CJ,UAAU,CAAC,KAAK,CAAC;MACjBY,cAAc,CAAC3B,aAAa,CAAC,CAAC,CAAC;MAC/BK,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;MACxBY,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDb,iBAAiB,CAAC,oCAAoC,CAAC;IACzD;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd;IACAkB,cAAc,CAACP,aAAa,KAAK,EAAE,CAAC;;IAEpC;IACA,MAAMwF,sBAAsB,GAAGC,IAAI,CAACC,GAAG,CACrC,GAAGC,KAAK,CAACC,IAAI,CAACvE,SAAS,CAACwE,OAAO,CAAChD,OAAO,CAAC,CAACS,GAAG,CACzCwC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAClB,MAAM,GAAG,CAAC,CAAC;IACrC,CACF,CAAC;IACDxD,SAAS,CAACwE,OAAO,CAACG,KAAK,CAACC,KAAK,GAAG,GAAGT,sBAAsB,GAAG,EAAE,IAAI,CAAC,CAAC;EACtE,CAAC,EAAE,CAACxF,aAAa,CAAC,CAAC;EAEnB,MAAMkG,WAAW,GAAG;IAClBC,eAAe,EAAE,0BAA0B;IAC3CC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,MAAM;IACjBC,WAAW,EAAE,MAAM;IACnBC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,gBAAgB,GAAIC,cAAc,IAAK;IAC3CA,cAAc,CAAC;MACbX,eAAe,EAAE,0BAA0B;MAC3CC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAMW,gBAAgB,GAAID,cAAc,IAAK;IAC3CA,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACzD,EAAE,EAAE0D,GAAG,EAAE5E,KAAK,KAAK;IAC3CpB,aAAa,CAAEiG,UAAU,KAAM;MAC7B,GAAGA,UAAU;MACb,CAAC3D,EAAE,GAAG;QACJ,GAAG2D,UAAU,CAAC3D,EAAE,CAAC;QACjB,CAAC0D,GAAG,GAAG5E;MACT;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACE3C,OAAA;IAAAyH,QAAA,gBACEzH,OAAA;MAAAyH,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpD7H,OAAA;MAAO8H,OAAO,EAAC;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtC7H,OAAA;MACE6D,EAAE,EAAC,cAAc;MACjBkE,GAAG,EAAEpG,SAAU,CAAC;MAAA;MAChBgB,KAAK,EAAErC,aAAc;MACrB0H,QAAQ,EAAExF,iBAAkB;MAAAiF,QAAA,gBAE5BzH,OAAA;QAAQ2C,KAAK,EAAC,EAAE;QAAA8E,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnC7H,OAAA;QAAQ2C,KAAK,EAAC,OAAO;QAAA8E,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC7H,OAAA;QAAQ2C,KAAK,EAAC,UAAU;QAAA8E,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3C7H,OAAA;QAAQ2C,KAAK,EAAC,QAAQ;QAAA8E,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7C7H,OAAA;QAAQ2C,KAAK,EAAC,aAAa;QAAA8E,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACT7H,OAAA;MAAAyH,QAAA,gBACEzH,OAAA;QAAIsG,KAAK,EAAE;UAAE2B,YAAY,EAAE;QAAO,CAAE;QAAAR,QAAA,GAAC,cACvB,EAAC7F,UAAU,CAACtB,aAAa,CAAC,IAAI,EAAE;MAAA;QAAAoH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,EACJrH,SAAS,CAAC2E,MAAM,GAAG,CAAC,iBACnBnF,OAAA;QACEsG,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACb2B,cAAc,EAAE,UAAU;UAC1BC,SAAS,EAAE;QACb,CAAE;QAAAV,QAAA,gBAEFzH,OAAA;UAAAyH,QAAA,eACEzH,OAAA;YAAAyH,QAAA,gBACEzH,OAAA;cAAAyH,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACdlC,MAAM,CAACyC,IAAI,CAAC5H,SAAS,CAAC,CAAC,CAAC,CAAC,CAACoD,GAAG,CAC3B2D,GAAG,IACFA,GAAG,KAAK,SAAS,iBACfvH,OAAA;cAAAyH,QAAA,EACGF,GAAG,CAACc,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGf,GAAG,CAACgB,KAAK,CAAC,CAAC;YAAC,GADpChB,GAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAER,CAEV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR7H,OAAA;UAAAyH,QAAA,EACGjH,SAAS,CAACoD,GAAG,CAAC,CAACf,KAAK,EAAE2F,KAAK,kBAC1BxI,OAAA;YAEEsG,KAAK,EAAE;cACLG,eAAe,EACb+B,KAAK,GAAG,CAAC,KAAK,CAAC,GACX,0BAA0B,GAC1B;YACR,CAAE;YAAAf,QAAA,gBAEFzH,OAAA;cAAAyH,QAAA,eACEzH,OAAA;gBACEyI,IAAI,EAAC,UAAU;gBACf5E,EAAE,EAAE,YAAY2E,KAAK,EAAG;gBACxBE,IAAI,EAAE,YAAYF,KAAK,EAAG;gBAC1BG,OAAO,EAAEjI,eAAe,CAACqC,QAAQ,CAACF,KAAK,CAAE;gBACzCmF,QAAQ,EAAEA,CAAA,KAAMpF,oBAAoB,CAACC,KAAK;cAAE;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,EACJlC,MAAM,CAACyC,IAAI,CAAC5H,SAAS,CAAC,CAAC,CAAC,CAAC,CAACoD,GAAG,CAC3B2D,GAAG;cAAA,IAAAqB,qBAAA,EAAAC,oBAAA;cAAA,OACFtB,GAAG,KAAK,SAAS,iBACfvH,OAAA;gBAAAyH,QAAA,EACGrG,OAAO,IAAIV,eAAe,CAACqC,QAAQ,CAACF,KAAK,CAAC,gBACzC7C,OAAA;kBACEyI,IAAI,EAAC,MAAM;kBACX9F,KAAK,GAAAiG,qBAAA,IAAAC,oBAAA,GAAEvH,UAAU,CAACuB,KAAK,CAACgB,EAAE,CAAC,cAAAgF,oBAAA,uBAApBA,oBAAA,CAAuBtB,GAAG,CAAC,cAAAqB,qBAAA,cAAAA,qBAAA,GAAI/F,KAAK,CAAC0E,GAAG,CAAE;kBACjDS,QAAQ,EAAGvF,CAAC,IACV6E,gBAAgB,CAACzE,KAAK,CAACgB,EAAE,EAAE0D,GAAG,EAAE9E,CAAC,CAACC,MAAM,CAACC,KAAK,CAC/C;kBACDmG,QAAQ,EAAEvB,GAAG,KAAK;gBAAK;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB,CAAC,GACAN,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,WAAW,GACvCtE,UAAU,CAACJ,KAAK,CAAC0E,GAAG,CAAC,CAAC,GAEtB1E,KAAK,CAAC0E,GAAG;cACV,GAdMA,GAAG;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAeR,CACL;YAAA,CACL,CAAC;UAAA,GArCIW,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsCR,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACLjH,WAAW,iBACVZ,OAAA,CAAAE,SAAA;MAAAuH,QAAA,gBACEzH,OAAA;QACE+I,OAAO,EAAErF,iBAAkB;QAC3B4C,KAAK,EAAE;UAAE,GAAGE,WAAW;UAAE,GAAG1F;QAAe,CAAE;QAC7CkI,YAAY,EAAEA,CAAA,KAAM7B,gBAAgB,CAACpG,iBAAiB,CAAE;QACxDkI,YAAY,EAAEA,CAAA,KAAM5B,gBAAgB,CAACtG,iBAAiB,CAAE;QAAA0G,QAAA,EACzD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7H,OAAA;QACE+I,OAAO,EAAE3D,oBAAqB;QAC9BkB,KAAK,EAAE;UAAE,GAAGE,WAAW;UAAE,GAAGxF;QAAkB,CAAE;QAChDgI,YAAY,EAAEA,CAAA,KAAM7B,gBAAgB,CAAClG,oBAAoB,CAAE;QAC3DgI,YAAY,EAAEA,CAAA,KAAM5B,gBAAgB,CAACpG,oBAAoB,CAAE;QAAAwG,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,CAACzG,OAAO,gBACPpB,OAAA;QACE+I,OAAO,EAAEzD,UAAW;QACpBgB,KAAK,EAAE;UAAE,GAAGE,WAAW;UAAE,GAAGtF;QAAgB,CAAE;QAC9C8H,YAAY,EAAEA,CAAA,KAAM7B,gBAAgB,CAAChG,kBAAkB,CAAE;QACzD8H,YAAY,EAAEA,CAAA,KAAM5B,gBAAgB,CAAClG,kBAAkB,CAAE;QAAAsG,QAAA,EAC1D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAET7H,OAAA;QACE+I,OAAO,EAAErD,UAAW;QACpBY,KAAK,EAAE;UAAE,GAAGE,WAAW;UAAE,GAAGtF;QAAgB,CAAE;QAC9C8H,YAAY,EAAEA,CAAA,KAAM7B,gBAAgB,CAAChG,kBAAkB,CAAE;QACzD8H,YAAY,EAAEA,CAAA,KAAM5B,gBAAgB,CAAClG,kBAAkB,CAAE;QAAAsG,QAAA,EAC1D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA,eACD,CACH,EACArG,cAAc,iBACbxB,OAAA;MACEsG,KAAK,EAAE;QACLG,eAAe,EAAE,0BAA0B;QAC3CC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,KAAK;QACnBC,OAAO,EAAE,MAAM;QACfG,SAAS,EAAE,MAAM;QACjBkC,QAAQ,EAAE,MAAM;QAChBnC,UAAU,EAAE,MAAM;QAClBoC,OAAO,EAAE,aAAa;QACtBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA5B,QAAA,gBAEFzH,OAAA;QAAMsG,KAAK,EAAE;UAAEW,WAAW,EAAE,MAAM;UAAEiC,QAAQ,EAAE;QAAO,CAAE;QAAAzB,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACNrG,cAAc;IAAA;MAAAkG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxH,EAAA,CArWIF,WAAW;EAAA,QAWEL,WAAW;AAAA;AAAAwJ,EAAA,GAXxBnJ,WAAW;AAuWjB,eAAeA,WAAW;AAAC,IAAAmJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}