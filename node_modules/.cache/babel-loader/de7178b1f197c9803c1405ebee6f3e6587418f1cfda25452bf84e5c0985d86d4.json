{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/ViewContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewContent = ({\n  setOfficeScreenContent,\n  officeScreenContent = []\n}) => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false);\n  const [addButtonStyle, setAddButtonStyle] = useState({});\n  const [deleteButtonStyle, setDeleteButtonStyle] = useState({});\n  const [editButtonStyle, setEditButtonStyle] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [editValues, setEditValues] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const selectRef = useRef(null);\n  const MAX_ITEMS_PER_SECTION = 4;\n  const tableNames = {\n    users: \"Brukere\",\n    comments: \"Beskjeder\",\n    events: \"Arrangementer\",\n    canteenMenu: \"Kantinemeny\"\n  };\n  const fetchTableData = async table => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n  const handleTableChange = e => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false);\n    setSuccessMessage(\"\");\n    setErrorMessage(\"\");\n    setEditing(false);\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n  const handleCheckboxChange = entry => {\n    setSelectedEntries(prevEntries => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter(e => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n  const formatDateForMySQL = dateString => {\n    const date = new Date(dateString);\n    return date.toISOString().slice(0, 19).replace(\"T\", \" \");\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleAddToScreen = async () => {\n    if (!officeScreenContent) {\n      setErrorMessage(\"Office screen content is not available.\");\n      return;\n    }\n    const entriesToAdd = selectedEntries.filter(entry => {\n      const sectionEntries = officeScreenContent.filter(item => item.table === selectedTable);\n      return sectionEntries.length < MAX_ITEMS_PER_SECTION;\n    });\n    if (entriesToAdd.length === 0) {\n      setErrorMessage(\"Max number of items reached for this section.\");\n      return;\n    }\n    const promises = entriesToAdd.map(entry => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map(result => ({\n        ...result.data,\n        table: selectedTable\n      }));\n      let addedEntries = [];\n      setOfficeScreenContent(prevContent => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent];\n        entriesData.forEach(entry => {\n          if (!parsedContent.some(existingEntry => existingEntry.id === entry.id && existingEntry.table === entry.table)) {\n            newContent.push(entry);\n            addedEntries.push(entry);\n          }\n        });\n        localStorage.setItem(\"officeScreenContent\", JSON.stringify(newContent));\n        return newContent;\n      });\n      if (addedEntries.length > 0) {\n        setSuccessMessage(\"Added to screen.\");\n        setErrorMessage(\"\");\n      } else {\n        setSuccessMessage(\"\");\n        setErrorMessage(\"Already exists on the screen.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n      setErrorMessage(\"Failed to add to the screen.\");\n    }\n  };\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map(entry => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Deleted from database.\");\n      setErrorMessage(\"\");\n      fetchTableData(selectedTable);\n      setSelectedEntries([]);\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n      setErrorMessage(\"Failed to delete selected entries.\");\n    }\n  };\n  const handleEdit = () => {\n    setEditing(true);\n    const initialEditValues = selectedEntries.reduce((acc, entry) => {\n      acc[entry.id] = {\n        ...entry\n      };\n      return acc;\n    }, {});\n    setEditValues(initialEditValues);\n  };\n  const handleSave = async () => {\n    const formattedEditValues = Object.values(editValues).map(entry => {\n      if (entry.date) {\n        entry.date = formatDateForMySQL(entry.date);\n      }\n      if (entry.birthdate) {\n        entry.birthdate = formatDateForMySQL(entry.birthdate);\n      }\n      if (entry.created_at) {\n        entry.created_at = formatDateForMySQL(entry.created_at);\n      }\n      return entry;\n    });\n    const promises = formattedEditValues.map(entry => {\n      return axios.put(`http://localhost:3000/${selectedTable}/${entry.id}`, entry, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Updated successfully.\");\n      setErrorMessage(\"\");\n      setEditing(false);\n      fetchTableData(selectedTable);\n      setSelectedEntries([]);\n      setEditValues({});\n    } catch (error) {\n      console.error(\"Error updating selected entries:\", error);\n      setErrorMessage(\"Failed to update selected entries.\");\n    }\n  };\n  useEffect(() => {\n    setShowButtons(selectedTable !== \"\");\n    const longestOptionTextWidth = Math.max(...Array.from(selectRef.current.options).map(option => option.text.length * 8));\n    selectRef.current.style.width = `${longestOptionTextWidth + 40}px`;\n  }, [selectedTable]);\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n    transition: \"background-color 0.3s, color 0.3s\"\n  };\n  const handleMouseEnter = setButtonStyle => {\n    setButtonStyle({\n      backgroundColor: \"rgba(227, 213, 202, 0.6)\",\n      color: \"white\"\n    });\n  };\n  const handleMouseLeave = setButtonStyle => {\n    setButtonStyle({});\n  };\n  const handleEditChange = (id, key, value) => {\n    setEditValues(prevValues => ({\n      ...prevValues,\n      [id]: {\n        ...prevValues[id],\n        [key]: value\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Legg til innhold som skal vises p\\xE5 skjermen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"table-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"table-select\",\n      ref: selectRef,\n      value: selectedTable,\n      onChange: handleTableChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"users\",\n        children: \"Brukere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"comments\",\n        children: \"Beskjeder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"events\",\n        children: \"Arrangementer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"canteenMenu\",\n        children: \"Kantinemeny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [\"Innhold fra \", tableNames[selectedTable] || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), tableData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), Object.keys(tableData[0]).map(key => key !== \"picture\" && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key.charAt(0).toUpperCase() + key.slice(1)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: index % 2 === 0 ? \"rgba(227, 213, 202, 0.2)\" : \"transparent\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `checkbox-${index}`,\n                name: `checkbox-${index}`,\n                checked: selectedEntries.includes(entry),\n                onChange: () => handleCheckboxChange(entry)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this), Object.keys(tableData[0]).map(key => {\n              var _editValues$entry$id$, _editValues$entry$id;\n              return key !== \"picture\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editing && selectedEntries.includes(entry) ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: (_editValues$entry$id$ = (_editValues$entry$id = editValues[entry.id]) === null || _editValues$entry$id === void 0 ? void 0 : _editValues$entry$id[key]) !== null && _editValues$entry$id$ !== void 0 ? _editValues$entry$id$ : entry[key],\n                  onChange: e => handleEditChange(entry.id, key, e.target.value),\n                  disabled: key === \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 29\n                }, this) : key === \"date\" || key === \"birthdate\" ? formatDate(entry[key]) : entry[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 25\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), showButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToScreen,\n        style: {\n          ...buttonStyle,\n          ...addButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setAddButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setAddButtonStyle),\n        children: \"Legg til\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteSelected,\n        style: {\n          ...buttonStyle,\n          ...deleteButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setDeleteButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setDeleteButtonStyle),\n        children: \"Slett\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this), !editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        style: {\n          ...buttonStyle,\n          ...editButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setEditButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setEditButtonStyle),\n        children: \"Rediger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        style: {\n          ...buttonStyle,\n          ...editButtonStyle\n        },\n        onMouseEnter: () => handleMouseEnter(setEditButtonStyle),\n        onMouseLeave: () => handleMouseLeave(setEditButtonStyle),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n        color: \"black\",\n        border: \"1px solid #c3e6cb\",\n        borderRadius: \"4px\",\n        padding: \"10px\",\n        marginTop: \"20px\",\n        fontSize: \"16px\",\n        fontWeight: \"bold\",\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"10px\",\n          fontSize: \"20px\"\n        },\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), successMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n        color: \"red\",\n        border: \"1px solid #e3342f\",\n        borderRadius: \"4px\",\n        padding: \"10px\",\n        marginTop: \"20px\",\n        fontSize: \"16px\",\n        fontWeight: \"bold\",\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"10px\",\n          fontSize: \"20px\"\n        },\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewContent, \"0+Xc4T14z0WvXzOUSg1Yr6O2n2U=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewContent;\nexport default ViewContent;\nvar _c;\n$RefreshReg$(_c, \"ViewContent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewContent","setOfficeScreenContent","officeScreenContent","_s","selectedTable","setSelectedTable","tableData","setTableData","selectedEntries","setSelectedEntries","showButtons","setShowButtons","addButtonStyle","setAddButtonStyle","deleteButtonStyle","setDeleteButtonStyle","editButtonStyle","setEditButtonStyle","editing","setEditing","editValues","setEditValues","successMessage","setSuccessMessage","errorMessage","setErrorMessage","navigate","selectRef","MAX_ITEMS_PER_SECTION","tableNames","users","comments","events","canteenMenu","fetchTableData","table","response","get","data","error","console","handleTableChange","e","target","value","handleCheckboxChange","entry","prevEntries","includes","filter","formatDateForMySQL","dateString","date","Date","toISOString","slice","replace","formatDate","options","year","month","day","toLocaleDateString","undefined","handleAddToScreen","entriesToAdd","sectionEntries","item","length","promises","map","id","results","Promise","all","entriesData","result","addedEntries","prevContent","savedContent","localStorage","getItem","parsedContent","JSON","parse","newContent","forEach","some","existingEntry","push","setItem","stringify","handleDeleteSelected","delete","handleEdit","initialEditValues","reduce","acc","handleSave","formattedEditValues","Object","values","birthdate","created_at","put","headers","longestOptionTextWidth","Math","max","Array","from","current","option","text","style","width","buttonStyle","backgroundColor","color","border","borderRadius","padding","cursor","fontWeight","marginTop","marginRight","transition","handleMouseEnter","setButtonStyle","handleMouseLeave","handleEditChange","key","prevValues","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","ref","onChange","marginBottom","borderCollapse","textAlign","keys","charAt","toUpperCase","index","type","name","checked","_editValues$entry$id$","_editValues$entry$id","disabled","onClick","onMouseEnter","onMouseLeave","fontSize","display","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/ViewContent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.css\";\n\nconst ViewContent = ({ setOfficeScreenContent, officeScreenContent = [] }) => {\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [selectedEntries, setSelectedEntries] = useState([]);\n  const [showButtons, setShowButtons] = useState(false);\n  const [addButtonStyle, setAddButtonStyle] = useState({});\n  const [deleteButtonStyle, setDeleteButtonStyle] = useState({});\n  const [editButtonStyle, setEditButtonStyle] = useState({});\n  const [editing, setEditing] = useState(false);\n  const [editValues, setEditValues] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const selectRef = useRef(null);\n\n  const MAX_ITEMS_PER_SECTION = 4;\n\n  const tableNames = {\n    users: \"Brukere\",\n    comments: \"Beskjeder\",\n    events: \"Arrangementer\",\n    canteenMenu: \"Kantinemeny\",\n  };\n\n  const fetchTableData = async (table) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/${table}`);\n      setTableData(response.data);\n    } catch (error) {\n      console.error(`Error fetching data from ${table}:`, error);\n    }\n  };\n\n  const handleTableChange = (e) => {\n    setSelectedTable(e.target.value);\n    setShowButtons(false);\n    setSuccessMessage(\"\");\n    setErrorMessage(\"\");\n    setEditing(false);\n    if (e.target.value) {\n      fetchTableData(e.target.value);\n    } else {\n      setTableData([]);\n    }\n  };\n\n  const handleCheckboxChange = (entry) => {\n    setSelectedEntries((prevEntries) => {\n      if (prevEntries.includes(entry)) {\n        return prevEntries.filter((e) => e !== entry);\n      } else {\n        return [...prevEntries, entry];\n      }\n    });\n  };\n\n  const formatDateForMySQL = (dateString) => {\n    const date = new Date(dateString);\n    return date.toISOString().slice(0, 19).replace(\"T\", \" \");\n  };\n\n  const formatDate = (dateString) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleAddToScreen = async () => {\n    if (!officeScreenContent) {\n      setErrorMessage(\"Office screen content is not available.\");\n      return;\n    }\n\n    const entriesToAdd = selectedEntries.filter((entry) => {\n      const sectionEntries = officeScreenContent.filter(\n        (item) => item.table === selectedTable\n      );\n      return sectionEntries.length < MAX_ITEMS_PER_SECTION;\n    });\n\n    if (entriesToAdd.length === 0) {\n      setErrorMessage(\"Max number of items reached for this section.\");\n      return;\n    }\n\n    const promises = entriesToAdd.map((entry) => {\n      return axios.get(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      const results = await Promise.all(promises);\n      const entriesData = results.map((result) => ({\n        ...result.data,\n        table: selectedTable,\n      }));\n\n      let addedEntries = [];\n\n      setOfficeScreenContent((prevContent) => {\n        const savedContent = localStorage.getItem(\"officeScreenContent\");\n        const parsedContent = savedContent ? JSON.parse(savedContent) : [];\n        const newContent = [...parsedContent];\n\n        entriesData.forEach((entry) => {\n          if (\n            !parsedContent.some(\n              (existingEntry) =>\n                existingEntry.id === entry.id &&\n                existingEntry.table === entry.table\n            )\n          ) {\n            newContent.push(entry);\n            addedEntries.push(entry);\n          }\n        });\n\n        localStorage.setItem(\"officeScreenContent\", JSON.stringify(newContent));\n        return newContent;\n      });\n\n      if (addedEntries.length > 0) {\n        setSuccessMessage(\"Added to screen.\");\n        setErrorMessage(\"\");\n      } else {\n        setSuccessMessage(\"\");\n        setErrorMessage(\"Already exists on the screen.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for selected entries:\", error);\n      setErrorMessage(\"Failed to add to the screen.\");\n    }\n  };\n\n  const handleDeleteSelected = async () => {\n    const promises = selectedEntries.map((entry) => {\n      return axios.delete(`http://localhost:3000/${selectedTable}/${entry.id}`);\n    });\n\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Deleted from database.\");\n      setErrorMessage(\"\");\n      fetchTableData(selectedTable);\n      setSelectedEntries([]);\n    } catch (error) {\n      console.error(\"Error deleting selected entries:\", error);\n      setErrorMessage(\"Failed to delete selected entries.\");\n    }\n  };\n\n  const handleEdit = () => {\n    setEditing(true);\n    const initialEditValues = selectedEntries.reduce((acc, entry) => {\n      acc[entry.id] = { ...entry };\n      return acc;\n    }, {});\n    setEditValues(initialEditValues);\n  };\n\n  const handleSave = async () => {\n    const formattedEditValues = Object.values(editValues).map((entry) => {\n      if (entry.date) {\n        entry.date = formatDateForMySQL(entry.date);\n      }\n      if (entry.birthdate) {\n        entry.birthdate = formatDateForMySQL(entry.birthdate);\n      }\n      if (entry.created_at) {\n        entry.created_at = formatDateForMySQL(entry.created_at);\n      }\n      return entry;\n    });\n\n    const promises = formattedEditValues.map((entry) => {\n      return axios.put(\n        `http://localhost:3000/${selectedTable}/${entry.id}`,\n        entry,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n    });\n\n    try {\n      await Promise.all(promises);\n      setSuccessMessage(\"Updated successfully.\");\n      setErrorMessage(\"\");\n      setEditing(false);\n      fetchTableData(selectedTable);\n      setSelectedEntries([]);\n      setEditValues({});\n    } catch (error) {\n      console.error(\"Error updating selected entries:\", error);\n      setErrorMessage(\"Failed to update selected entries.\");\n    }\n  };\n\n  useEffect(() => {\n    setShowButtons(selectedTable !== \"\");\n    const longestOptionTextWidth = Math.max(\n      ...Array.from(selectRef.current.options).map(\n        (option) => option.text.length * 8\n      )\n    );\n    selectRef.current.style.width = `${longestOptionTextWidth + 40}px`;\n  }, [selectedTable]);\n\n  const buttonStyle = {\n    backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n    color: \"black\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginTop: \"20px\",\n    marginRight: \"10px\",\n    transition: \"background-color 0.3s, color 0.3s\",\n  };\n\n  const handleMouseEnter = (setButtonStyle) => {\n    setButtonStyle({\n      backgroundColor: \"rgba(227, 213, 202, 0.6)\",\n      color: \"white\",\n    });\n  };\n\n  const handleMouseLeave = (setButtonStyle) => {\n    setButtonStyle({});\n  };\n\n  const handleEditChange = (id, key, value) => {\n    setEditValues((prevValues) => ({\n      ...prevValues,\n      [id]: {\n        ...prevValues[id],\n        [key]: value,\n      },\n    }));\n  };\n\n  return (\n    <div>\n      <h1>Legg til innhold som skal vises på skjermen</h1>\n      <label htmlFor=\"table-select\"></label>\n      <select\n        id=\"table-select\"\n        ref={selectRef}\n        value={selectedTable}\n        onChange={handleTableChange}\n      >\n        <option value=\"\">Select...</option>\n        <option value=\"users\">Brukere</option>\n        <option value=\"comments\">Beskjeder</option>\n        <option value=\"events\">Arrangementer</option>\n        <option value=\"canteenMenu\">Kantinemeny</option>\n      </select>\n      <div>\n        <h2 style={{ marginBottom: \"20px\" }}>\n          Innhold fra {tableNames[selectedTable] || \"\"}\n        </h2>\n        {tableData.length > 0 && (\n          <table\n            style={{\n              width: \"100%\",\n              borderCollapse: \"collapse\",\n              textAlign: \"left\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Select</th>\n                {Object.keys(tableData[0]).map(\n                  (key) =>\n                    key !== \"picture\" && (\n                      <th key={key}>\n                        {key.charAt(0).toUpperCase() + key.slice(1)}\n                      </th>\n                    )\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((entry, index) => (\n                <tr\n                  key={index}\n                  style={{\n                    backgroundColor:\n                      index % 2 === 0\n                        ? \"rgba(227, 213, 202, 0.2)\"\n                        : \"transparent\",\n                  }}\n                >\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      id={`checkbox-${index}`}\n                      name={`checkbox-${index}`}\n                      checked={selectedEntries.includes(entry)}\n                      onChange={() => handleCheckboxChange(entry)}\n                    />\n                  </td>\n                  {Object.keys(tableData[0]).map(\n                    (key) =>\n                      key !== \"picture\" && (\n                        <td key={key}>\n                          {editing && selectedEntries.includes(entry) ? (\n                            <input\n                              type=\"text\"\n                              value={editValues[entry.id]?.[key] ?? entry[key]}\n                              onChange={(e) =>\n                                handleEditChange(entry.id, key, e.target.value)\n                              }\n                              disabled={key === \"id\"}\n                            />\n                          ) : key === \"date\" || key === \"birthdate\" ? (\n                            formatDate(entry[key])\n                          ) : (\n                            entry[key]\n                          )}\n                        </td>\n                      )\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n      {showButtons && (\n        <>\n          <button\n            onClick={handleAddToScreen}\n            style={{ ...buttonStyle, ...addButtonStyle }}\n            onMouseEnter={() => handleMouseEnter(setAddButtonStyle)}\n            onMouseLeave={() => handleMouseLeave(setAddButtonStyle)}\n          >\n            Legg til\n          </button>\n          <button\n            onClick={handleDeleteSelected}\n            style={{ ...buttonStyle, ...deleteButtonStyle }}\n            onMouseEnter={() => handleMouseEnter(setDeleteButtonStyle)}\n            onMouseLeave={() => handleMouseLeave(setDeleteButtonStyle)}\n          >\n            Slett\n          </button>\n          {!editing ? (\n            <button\n              onClick={handleEdit}\n              style={{ ...buttonStyle, ...editButtonStyle }}\n              onMouseEnter={() => handleMouseEnter(setEditButtonStyle)}\n              onMouseLeave={() => handleMouseLeave(setEditButtonStyle)}\n            >\n              Rediger\n            </button>\n          ) : (\n            <button\n              onClick={handleSave}\n              style={{ ...buttonStyle, ...editButtonStyle }}\n              onMouseEnter={() => handleMouseEnter(setEditButtonStyle)}\n              onMouseLeave={() => handleMouseLeave(setEditButtonStyle)}\n            >\n              Save\n            </button>\n          )}\n        </>\n      )}\n      {successMessage && (\n        <div\n          style={{\n            backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n            color: \"black\",\n            border: \"1px solid #c3e6cb\",\n            borderRadius: \"4px\",\n            padding: \"10px\",\n            marginTop: \"20px\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <span style={{ marginRight: \"10px\", fontSize: \"20px\" }}>\n            &#10003;\n          </span>\n          {successMessage}\n        </div>\n      )}\n      {errorMessage && (\n        <div\n          style={{\n            backgroundColor: \"rgba(227, 213, 202, 0.2)\",\n            color: \"red\",\n            border: \"1px solid #e3342f\",\n            borderRadius: \"4px\",\n            padding: \"10px\",\n            marginTop: \"20px\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <span style={{ marginRight: \"10px\", fontSize: \"20px\" }}>\n            &#10060;\n          </span>\n          {errorMessage}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ViewContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}