{"ast":null,"code":"var _jsxFileName = \"/Users/soha/Desktop/lightbeam ny/src/Entur.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Entur = () => {\n  _s();\n  const [departures, setDepartures] = useState([]);\n  useEffect(() => {\n    const fetchDepartures = async () => {\n      const query = `\n        {\n          stopPlace(id: \"NSR:StopPlace:58335\") {\n            name\n            estimatedCalls(timeRange: 72100, numberOfDepartures: 20) {\n              realtime\n              aimedArrivalTime\n              expectedArrivalTime\n              destinationDisplay {\n                frontText\n              }\n              serviceJourney {\n                journeyPattern {\n                  line {\n                    publicCode\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n      const response = await fetch(\"https://api.entur.io/journey-planner/v2/graphql\", {\n        method: \"POST\",\n        headers: {\n          \"ET-Client-Name\": \"your-app-name\",\n          // Replace with your app name\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const result = await response.json();\n      setDepartures(result.data.stopPlace.estimatedCalls);\n    };\n    fetchDepartures();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Departures for Majorstuen T-bane\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: departures.map((departure, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [departure.serviceJourney.journeyPattern.line.publicCode, \" -\", \" \", departure.destinationDisplay.frontText, \" - Expected:\", \" \", new Date(departure.expectedArrivalTime).toLocaleTimeString()]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Entur, \"c4UzoursMCjL7fOjmA5dalRRviY=\");\n_c = Entur;\nexport default Entur;\nvar _c;\n$RefreshReg$(_c, \"Entur\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Entur","_s","departures","setDepartures","fetchDepartures","query","response","fetch","method","headers","body","JSON","stringify","result","json","data","stopPlace","estimatedCalls","children","fileName","_jsxFileName","lineNumber","columnNumber","map","departure","index","serviceJourney","journeyPattern","line","publicCode","destinationDisplay","frontText","Date","expectedArrivalTime","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/soha/Desktop/lightbeam ny/src/Entur.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Entur = () => {\n  const [departures, setDepartures] = useState([]);\n\n  useEffect(() => {\n    const fetchDepartures = async () => {\n      const query = `\n        {\n          stopPlace(id: \"NSR:StopPlace:58335\") {\n            name\n            estimatedCalls(timeRange: 72100, numberOfDepartures: 20) {\n              realtime\n              aimedArrivalTime\n              expectedArrivalTime\n              destinationDisplay {\n                frontText\n              }\n              serviceJourney {\n                journeyPattern {\n                  line {\n                    publicCode\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      `;\n\n      const response = await fetch(\n        \"https://api.entur.io/journey-planner/v2/graphql\",\n        {\n          method: \"POST\",\n          headers: {\n            \"ET-Client-Name\": \"your-app-name\", // Replace with your app name\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ query }),\n        }\n      );\n\n      const result = await response.json();\n      setDepartures(result.data.stopPlace.estimatedCalls);\n    };\n\n    fetchDepartures();\n  }, []);\n\n  return (\n    <div>\n      <h1>Real-Time Departures for Majorstuen T-bane</h1>\n      <ul>\n        {departures.map((departure, index) => (\n          <li key={index}>\n            {departure.serviceJourney.journeyPattern.line.publicCode} -{\" \"}\n            {departure.destinationDisplay.frontText} - Expected:{\" \"}\n            {new Date(departure.expectedArrivalTime).toLocaleTimeString()}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Entur;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,KAAK,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iDAAiD,EACjD;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,gBAAgB,EAAE,eAAe;UAAE;UACnC,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAM,CAAC;MAChC,CACF,CAAC;MAED,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCX,aAAa,CAACU,MAAM,CAACE,IAAI,CAACC,SAAS,CAACC,cAAc,CAAC;IACrD,CAAC;IAEDb,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDvB,OAAA;MAAAmB,QAAA,EACGhB,UAAU,CAACqB,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC/B1B,OAAA;QAAAmB,QAAA,GACGM,SAAS,CAACE,cAAc,CAACC,cAAc,CAACC,IAAI,CAACC,UAAU,EAAC,IAAE,EAAC,GAAG,EAC9DL,SAAS,CAACM,kBAAkB,CAACC,SAAS,EAAC,cAAY,EAAC,GAAG,EACvD,IAAIC,IAAI,CAACR,SAAS,CAACS,mBAAmB,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA,GAHtDT,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9DID,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAgEX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}