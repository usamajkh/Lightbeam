{"ast":null,"code":"var _jsxFileName = \"/Users/soha/lightbeam/src/OfficeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport screenfull from \"screenfull\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OfficeScreen = ({\n  officeScreenContent\n}) => {\n  _s();\n  const [editMode, setEditMode] = useState(false);\n  const [selectedItems, setSelectedItems] = useState([]);\n  useEffect(() => {\n    // Handle fullscreen toggle with Cmd/Ctrl + F\n    const handleKeyDown = event => {\n      if (event.key === \"f\" && (event.metaKey || event.ctrlKey)) {\n        event.preventDefault();\n        toggleFullscreen();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    if (screenfull.isEnabled) {\n      // Update the event listener to manage the edit mode state based on fullscreen state\n      const changeHandler = () => {\n        if (screenfull.isFullscreen) {\n          if (editMode) {\n            setEditMode(false); // Exit edit mode when entering fullscreen\n          }\n        }\n      };\n      screenfull.on(\"change\", changeHandler);\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        screenfull.off(\"change\", changeHandler);\n      };\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [editMode]);\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const renderEntry = (entry, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [editMode && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedItems.includes(index),\n        onChange: () => toggleSelection(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), Object.entries(entry).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \" \", key === \"date\" || key === \"birthdate\" ? formatDate(value) : value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n  const toggleFullscreen = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle();\n    }\n  };\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n    setSelectedItems([]); // Clear selections when toggling edit mode\n  };\n  const toggleSelection = index => {\n    setSelectedItems(prevSelected => {\n      const indexInArray = prevSelected.indexOf(index);\n      if (indexInArray > -1) {\n        return prevSelected.filter(item => item !== index);\n      } else {\n        return [...prevSelected, index];\n      }\n    });\n  };\n  const removeSelectedItems = () => {\n    const updatedContent = officeScreenContent.filter((_, index) => !selectedItems.includes(index));\n    console.log(\"Items to remove:\", selectedItems);\n    console.log(\"Updated content:\", updatedContent);\n    setSelectedItems([]);\n    setEditMode(false); // Exit edit mode after removing items\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `signage-layout ${screenfull.isFullscreen ? \"fullscreen\" : \"\"}`,\n      children: [!screenfull.isFullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditMode,\n          children: editMode ? \"Cancel Edit\" : \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeSelectedItems,\n          children: \"Remove Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signage-events\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: officeScreenContent.filter(entry => entry.table === \"events\").map((event, index) => renderEntry(event, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signage-meetings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Meetings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: officeScreenContent.filter(entry => entry.table === \"meetings\").map((meeting, index) => renderEntry(meeting, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signage-canteen-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Canteen Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: officeScreenContent.filter(entry => entry.table === \"canteenMenu\").map((menu, index) => renderEntry(menu, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signage-other-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Other Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: officeScreenContent.filter(entry => entry.table !== \"events\" && entry.table !== \"meetings\" && entry.table !== \"canteenMenu\").map((other, index) => renderEntry(other, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(OfficeScreen, \"74cQC1yaU00z3+nVkJ1KqoaHJ2Q=\");\n_c = OfficeScreen;\nexport default OfficeScreen;\nvar _c;\n$RefreshReg$(_c, \"OfficeScreen\");","map":{"version":3,"names":["React","useState","useEffect","screenfull","jsxDEV","_jsxDEV","Fragment","_Fragment","OfficeScreen","officeScreenContent","_s","editMode","setEditMode","selectedItems","setSelectedItems","handleKeyDown","event","key","metaKey","ctrlKey","preventDefault","toggleFullscreen","document","addEventListener","isEnabled","changeHandler","isFullscreen","on","removeEventListener","off","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","renderEntry","entry","index","children","type","checked","includes","onChange","toggleSelection","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","value","charAt","toUpperCase","slice","toggle","toggleEditMode","prevSelected","indexInArray","indexOf","filter","item","removeSelectedItems","updatedContent","_","console","log","className","onClick","table","meeting","menu","other","_c","$RefreshReg$"],"sources":["/Users/soha/lightbeam/src/OfficeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport screenfull from \"screenfull\";\n\nconst OfficeScreen = ({ officeScreenContent }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  useEffect(() => {\n    // Handle fullscreen toggle with Cmd/Ctrl + F\n    const handleKeyDown = (event) => {\n      if (event.key === \"f\" && (event.metaKey || event.ctrlKey)) {\n        event.preventDefault();\n        toggleFullscreen();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    if (screenfull.isEnabled) {\n      // Update the event listener to manage the edit mode state based on fullscreen state\n      const changeHandler = () => {\n        if (screenfull.isFullscreen) {\n          if (editMode) {\n            setEditMode(false); // Exit edit mode when entering fullscreen\n          }\n        }\n      };\n\n      screenfull.on(\"change\", changeHandler);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        screenfull.off(\"change\", changeHandler);\n      };\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [editMode]);\n\n  const formatDate = (dateString) => {\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const renderEntry = (entry, index) => {\n    return (\n      <div key={index}>\n        {editMode && (\n          <input\n            type=\"checkbox\"\n            checked={selectedItems.includes(index)}\n            onChange={() => toggleSelection(index)}\n          />\n        )}\n        {Object.entries(entry).map(([key, value]) => (\n          <p key={key}>\n            <strong>{key.charAt(0).toUpperCase() + key.slice(1)}:</strong>{\" \"}\n            {key === \"date\" || key === \"birthdate\" ? formatDate(value) : value}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  const toggleFullscreen = () => {\n    if (screenfull.isEnabled) {\n      screenfull.toggle();\n    }\n  };\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n    setSelectedItems([]); // Clear selections when toggling edit mode\n  };\n\n  const toggleSelection = (index) => {\n    setSelectedItems((prevSelected) => {\n      const indexInArray = prevSelected.indexOf(index);\n      if (indexInArray > -1) {\n        return prevSelected.filter((item) => item !== index);\n      } else {\n        return [...prevSelected, index];\n      }\n    });\n  };\n\n  const removeSelectedItems = () => {\n    const updatedContent = officeScreenContent.filter(\n      (_, index) => !selectedItems.includes(index)\n    );\n    console.log(\"Items to remove:\", selectedItems);\n    console.log(\"Updated content:\", updatedContent);\n\n    setSelectedItems([]);\n    setEditMode(false); // Exit edit mode after removing items\n  };\n\n  return (\n    <div>\n      <div\n        className={`signage-layout ${\n          screenfull.isFullscreen ? \"fullscreen\" : \"\"\n        }`}\n      >\n        {/* Ensure buttons only show when not in fullscreen */}\n        {!screenfull.isFullscreen && (\n          <>\n            <button onClick={toggleEditMode}>\n              {editMode ? \"Cancel Edit\" : \"Edit\"}\n            </button>\n            {editMode && (\n              <button onClick={removeSelectedItems}>Remove Selected</button>\n            )}\n          </>\n        )}\n\n        {/* Content sections */}\n        <div className=\"signage-events\">\n          <h3>Events</h3>\n          <ul>\n            {officeScreenContent\n              .filter((entry) => entry.table === \"events\")\n              .map((event, index) => renderEntry(event, index))}\n          </ul>\n        </div>\n\n        <div className=\"signage-meetings\">\n          <h3>Meetings</h3>\n          <ul>\n            {officeScreenContent\n              .filter((entry) => entry.table === \"meetings\")\n              .map((meeting, index) => renderEntry(meeting, index))}\n          </ul>\n        </div>\n\n        <div className=\"signage-canteen-menu\">\n          <h3>Canteen Menu</h3>\n          <ul>\n            {officeScreenContent\n              .filter((entry) => entry.table === \"canteenMenu\")\n              .map((menu, index) => renderEntry(menu, index))}\n          </ul>\n        </div>\n\n        <div className=\"signage-other-content\">\n          <h3>Other Content</h3>\n          <ul>\n            {officeScreenContent\n              .filter(\n                (entry) =>\n                  entry.table !== \"events\" &&\n                  entry.table !== \"meetings\" &&\n                  entry.table !== \"canteenMenu\"\n              )\n              .map((other, index) => renderEntry(other, index))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OfficeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}